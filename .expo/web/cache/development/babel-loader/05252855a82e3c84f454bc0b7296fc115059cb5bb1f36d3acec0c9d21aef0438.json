{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\dimag-kharaab-backup\\\\SafeMitra\\\\SafeMitra-app\\\\screen\\\\functional-part\\\\LiveLocationStatusScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport styles from '../styles-part/LiveLocationStatusScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveLocationStatusScreen = () => {\n  const navigation = useNavigation();\n  const [isLocationActive, setIsLocationActive] = useState(true);\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#FF3B30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.logoContainer,\n        children: [_jsxDEV(SafeMitraLogo, {\n          color: \"#FF3B30\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.logoText,\n          children: \"SafeMitra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.content,\n      children: _jsxDEV(View, {\n        style: styles.locationStatusCard,\n        children: [_jsxDEV(View, {\n          style: styles.statusHeader,\n          children: [_jsxDEV(Ionicons, {\n            name: \"location\",\n            size: 24,\n            color: \"#FF3B30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusTitle,\n            children: \"Live Location Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statusContent,\n          children: _jsxDEV(Text, {\n            style: styles.statusText,\n            children: \"SafeMitra is securely tracking your location in real time while background monitoring is ON.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.mapContainer,\n          children: _jsxDEV(View, {\n            style: styles.mapPlaceholder,\n            children: [_jsxDEV(Ionicons, {\n              name: \"map\",\n              size: 40,\n              color: \"#CCCCCC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.mapPlaceholderText,\n              children: \"User's Live Map View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.mapPlaceholderSubtext,\n              children: locationData?.address || 'Map integration coming soon'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statusIndicator,\n          children: [_jsxDEV(View, {\n            style: [styles.statusDot, {\n              backgroundColor: isLocationActive ? '#4CAF50' : '#FF3B30'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusIndicatorText,\n            children: isLocationActive ? 'Location Tracking Active' : 'Location Tracking Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\nexport default LiveLocationStatusScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","SafeAreaView","Text","Image","ActivityIndicator","Alert","Ionicons","useNavigation","SafeMitraLogo","styles","jsxDEV","_jsxDEV","LiveLocationStatusScreen","navigation","isLocationActive","setIsLocationActive","style","container","children","header","backButton","onPress","goBack","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","logoContainer","logoText","content","locationStatusCard","statusHeader","statusTitle","statusContent","statusText","mapContainer","mapPlaceholder","mapPlaceholderText","mapPlaceholderSubtext","locationData","address","statusIndicator","statusDot","backgroundColor","statusIndicatorText"],"sources":["C:/Users/PC/OneDrive/dimag-kharaab-backup/SafeMitra/SafeMitra-app/screen/functional-part/LiveLocationStatusScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  View, \r\n  TouchableOpacity, \r\n  SafeAreaView, \r\n  Text, \r\n  Image,\r\n  ActivityIndicator,\r\n  Alert\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\nimport styles from '../styles-part/LiveLocationStatusScreenStyles';\r\n\r\n// TODO: Import API service for location tracking\r\n// import { locationService } from '../../services/locationService';\r\n\r\nconst LiveLocationStatusScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [isLocationActive, setIsLocationActive] = useState(true);\r\n  \r\n  // TODO: Add loading state for API calls\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // TODO: Add error state for API error handling\r\n  // const [error, setError] = useState(null);\r\n  \r\n  // TODO: Add state for location data\r\n  // const [locationData, setLocationData] = useState({\r\n  //   latitude: null,\r\n  //   longitude: null,\r\n  //   address: null,\r\n  //   lastUpdated: null,\r\n  //   accuracy: null\r\n  // });\r\n  \r\n  // TODO: Add state for tracking settings\r\n  // const [trackingSettings, setTrackingSettings] = useState({\r\n  //   isActive: true,\r\n  //   updateInterval: 60, // seconds\r\n  //   shareWithGuardians: true,\r\n  //   shareWithAuthorities: false\r\n  // });\r\n\r\n  // TODO: Add useEffect to fetch location tracking status\r\n  // useEffect(() => {\r\n  //   const fetchLocationStatus = async () => {\r\n  //     try {\r\n  //       setIsLoading(true);\r\n  //       const response = await locationService.getLocationTrackingStatus();\r\n  //       setTrackingSettings(response.data.settings);\r\n  //       setIsLocationActive(response.data.settings.isActive);\r\n  //     } catch (err) {\r\n  //       setError('Failed to load location tracking status');\r\n  //       console.error(err);\r\n  //     } finally {\r\n  //       setIsLoading(false);\r\n  //     }\r\n  //   };\r\n  //   \r\n  //   fetchLocationStatus();\r\n  // }, []);\r\n\r\n  // TODO: Add useEffect to start location tracking\r\n  // useEffect(() => {\r\n  //   let locationSubscription;\r\n  //   \r\n  //   const startLocationTracking = async () => {\r\n  //     try {\r\n  //       if (isLocationActive) {\r\n  //         // Start location tracking\r\n  //         locationSubscription = await locationService.startLocationTracking({\r\n  //           updateInterval: trackingSettings.updateInterval,\r\n  //           shareWithGuardians: trackingSettings.shareWithGuardians,\r\n  //           shareWithAuthorities: trackingSettings.shareWithAuthorities\r\n  //         });\r\n  //         \r\n  //         // Set up listener for location updates\r\n  //         locationService.onLocationUpdate((data) => {\r\n  //           setLocationData(data);\r\n  //         });\r\n  //       }\r\n  //     } catch (err) {\r\n  //       setError('Failed to start location tracking');\r\n  //       console.error(err);\r\n  //     }\r\n  //   };\r\n  //   \r\n  //   startLocationTracking();\r\n  //   \r\n  //   return () => {\r\n  //     // Clean up subscription when component unmounts\r\n  //     if (locationSubscription) {\r\n  //       locationService.stopLocationTracking();\r\n  //     }\r\n  //   };\r\n  // }, [isLocationActive, trackingSettings]);\r\n\r\n  // TODO: Add function to toggle location tracking\r\n  // const toggleLocationTracking = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     if (isLocationActive) {\r\n  //       await locationService.pauseLocationTracking();\r\n  //     } else {\r\n  //       await locationService.resumeLocationTracking();\r\n  //     }\r\n  //     setIsLocationActive(!isLocationActive);\r\n  //   } catch (err) {\r\n  //     setError(`Failed to ${isLocationActive ? 'pause' : 'resume'} location tracking`);\r\n  //     Alert.alert('Error', `Failed to ${isLocationActive ? 'pause' : 'resume'} location tracking`);\r\n  //     console.error(err);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.logoContainer}>\r\n          <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n          <Text style={styles.logoText}>SafeMitra</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <View style={styles.content}>\r\n        {/* Loading Indicator */}\r\n        {/* TODO: Add loading indicator when API calls are in progress */}\r\n        {/* {isLoading && <ActivityIndicator size=\"large\" color=\"#FF3B30\" style={styles.loadingIndicator} />} */}\r\n\r\n        {/* Error Message */}\r\n        {/* TODO: Add error message display */}\r\n        {/* {error && <Text style={styles.errorText}>{error}</Text> */}\r\n\r\n        <View style={styles.locationStatusCard}>\r\n          {/* Status Header */}\r\n          <View style={styles.statusHeader}>\r\n            <Ionicons name=\"location\" size={24} color=\"#FF3B30\" />\r\n            <Text style={styles.statusTitle}>Live Location Active</Text>\r\n          </View>\r\n\r\n          {/* Status Content */}\r\n          <View style={styles.statusContent}>\r\n            <Text style={styles.statusText}>\r\n              SafeMitra is securely tracking your location in real time while background monitoring is ON.\r\n            </Text>\r\n          </View>\r\n\r\n          {/* Map Placeholder */}\r\n          <View style={styles.mapContainer}>\r\n            {/* TODO: Replace with actual map component using location data */}\r\n            <View style={styles.mapPlaceholder}>\r\n              <Ionicons name=\"map\" size={40} color=\"#CCCCCC\" />\r\n              <Text style={styles.mapPlaceholderText}>User's Live Map View</Text>\r\n              <Text style={styles.mapPlaceholderSubtext}>\r\n                {/* TODO: Display actual location data */}\r\n                {locationData?.address || 'Map integration coming soon'}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n\r\n          {/* Status Indicator */}\r\n          <View style={styles.statusIndicator}>\r\n            <View style={[\r\n              styles.statusDot,\r\n              { backgroundColor: isLocationActive ? '#4CAF50' : '#FF3B30' }\r\n            ]} />\r\n            <Text style={styles.statusIndicatorText}>\r\n              {isLocationActive ? 'Location Tracking Active' : 'Location Tracking Inactive'}\r\n            </Text>\r\n            \r\n            {/* Toggle Button */}\r\n            {/* TODO: Add toggle button for location tracking */}\r\n            {/* <TouchableOpacity \r\n              style={styles.toggleButton}\r\n              onPress={toggleLocationTracking}\r\n            >\r\n              <Text style={styles.toggleButtonText}>\r\n                {isLocationActive ? 'Pause Tracking' : 'Resume Tracking'}\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n          </View>\r\n          \r\n          {/* Location Details */}\r\n          {/* TODO: Add location details section */}\r\n          {/* {locationData && (\r\n            <View style={styles.locationDetails}>\r\n              <Text style={styles.locationDetailsTitle}>Location Details</Text>\r\n              <Text style={styles.locationDetailsText}>\r\n                Latitude: {locationData.latitude}\r\n              </Text>\r\n              <Text style={styles.locationDetailsText}>\r\n                Longitude: {locationData.longitude}\r\n              </Text>\r\n              <Text style={styles.locationDetailsText}>\r\n                Accuracy: {locationData.accuracy} meters\r\n              </Text>\r\n              <Text style={styles.locationDetailsText}>\r\n                Last Updated: {new Date(locationData.lastUpdated).toLocaleTimeString()}\r\n              </Text>\r\n            </View>\r\n          )} */}\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default LiveLocationStatusScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}