{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\dimag-kharaab-backup\\\\SafeMitra\\\\SafeMitra-app\\\\screen\\\\functional-part\\\\AutoAlertActiveScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport styles from '../styles-part/AutoAlertActiveScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoAlertActiveScreen = () => {\n  const navigation = useNavigation();\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [isEmergency, setIsEmergency] = useState(false);\n  const [actionsCompleted, setActionsCompleted] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          setIsEmergency(true);\n          setActionsCompleted(true);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const formatTime = seconds => {\n    return `${seconds}`;\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#FF3B30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.logoContainer,\n        children: [_jsxDEV(SafeMitraLogo, {\n          color: \"#FF3B30\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.logoText,\n          children: \"SafeMitra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.content,\n      children: [_jsxDEV(View, {\n        style: styles.alertHeader,\n        children: [_jsxDEV(View, {\n          style: styles.alertIconContainer,\n          children: _jsxDEV(Ionicons, {\n            name: \"alert-circle\",\n            size: 40,\n            color: \"#FF3B30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.alertTitle,\n          children: \"Auto Alert Triggered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.alertMessage,\n          children: [\"We detected a trained hotword and triggered emergency actions. If this was accidental, you can cancel it within \", timeLeft, \" seconds.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.timerContainer,\n        children: _jsxDEV(View, {\n          style: styles.timerCircle,\n          children: _jsxDEV(Text, {\n            style: styles.timerText,\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), !isEmergency && _jsxDEV(TouchableOpacity, {\n        style: styles.cancelButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Text, {\n          style: styles.cancelButtonText,\n          children: \"Cancel Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.statusSection,\n        children: [_jsxDEV(Text, {\n          style: styles.statusTitle,\n          children: \"Status Updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statusItem,\n          children: [_jsxDEV(Ionicons, {\n            name: actionsCompleted ? \"checkmark-circle\" : \"time\",\n            size: 24,\n            color: actionsCompleted ? \"#4CAF50\" : \"#FFA000\",\n            style: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusText,\n            children: \"Location sent to Guardians\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statusItem,\n          children: [_jsxDEV(Ionicons, {\n            name: actionsCompleted ? \"checkmark-circle\" : \"time\",\n            size: 24,\n            color: actionsCompleted ? \"#4CAF50\" : \"#FFA000\",\n            style: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusText,\n            children: \"Calling Police & NGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.statusItem,\n          children: [_jsxDEV(Ionicons, {\n            name: actionsCompleted ? \"checkmark-circle\" : \"time\",\n            size: 24,\n            color: actionsCompleted ? \"#4CAF50\" : \"#FFA000\",\n            style: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusText,\n            children: \"Evidence Saved to Blockchain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\nexport default AutoAlertActiveScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","SafeAreaView","Image","Platform","ActivityIndicator","useNavigation","Ionicons","SafeMitraLogo","styles","jsxDEV","_jsxDEV","AutoAlertActiveScreen","navigation","timeLeft","setTimeLeft","isEmergency","setIsEmergency","actionsCompleted","setActionsCompleted","timer","setInterval","prevTime","clearInterval","formatTime","seconds","style","container","children","header","backButton","onPress","goBack","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","logoContainer","logoText","content","alertHeader","alertIconContainer","alertTitle","alertMessage","timerContainer","timerCircle","timerText","cancelButton","cancelButtonText","statusSection","statusTitle","statusItem","statusIcon","statusText"],"sources":["C:/Users/PC/OneDrive/dimag-kharaab-backup/SafeMitra/SafeMitra-app/screen/functional-part/AutoAlertActiveScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  Image,\r\n  Platform,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\nimport styles from '../styles-part/AutoAlertActiveScreenStyles';\r\n\r\n// TODO: Import API service for emergency operations\r\n// import { emergencyService } from '../../services/emergencyService';\r\n\r\nconst AutoAlertActiveScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [timeLeft, setTimeLeft] = useState(10); // 10 seconds countdown\r\n  const [isEmergency, setIsEmergency] = useState(false);\r\n  \r\n  // TODO: Add loading state for API calls\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // TODO: Add error state for API error handling\r\n  // const [error, setError] = useState(null);\r\n  \r\n  // TODO: Add state for tracking emergency actions\r\n  // This state will track the status of various emergency actions taken during an auto-triggered emergency\r\n  // It will be updated as each action is completed successfully\r\n  // The data structure includes:\r\n  // - locationSent: Boolean indicating if the user's location has been sent to guardians\r\n  // - policeCalled: Boolean indicating if police has been notified\r\n  // - ngoCalled: Boolean indicating if NGO has been notified\r\n  // - evidenceSaved: Boolean indicating if evidence (voice, location) has been saved to blockchain\r\n  // This data will be used to update the UI to show which actions have been completed\r\n  // and to provide visual feedback to the user about the progress of emergency actions\r\n  // const [emergencyActions, setEmergencyActions] = useState({\r\n  //   locationSent: false,\r\n  //   policeCalled: false,\r\n  //   ngoCalled: false,\r\n  //   evidenceSaved: false\r\n  // });\r\n\r\n  // Temporary state for development - will be replaced with emergencyActions when implemented\r\n  const [actionsCompleted, setActionsCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // TODO: Add API call to initiate emergency protocol\r\n    // This function will be called when the component mounts\r\n    // It will initiate the emergency protocol and start the countdown\r\n    // const initiateEmergencyProtocol = async () => {\r\n    //   try {\r\n    //     setIsLoading(true);\r\n    //     const response = await emergencyService.initiateEmergency();\r\n    //     // Handle response\r\n    //   } catch (err) {\r\n    //     setError('Failed to initiate emergency protocol');\r\n    //     console.error(err);\r\n    //   } finally {\r\n    //     setIsLoading(false);\r\n    //   }\r\n    // };\r\n    // \r\n    // initiateEmergencyProtocol();\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          setIsEmergency(true);\r\n          // Set actions as completed when timer reaches zero (for development)\r\n          setActionsCompleted(true);\r\n          \r\n          // TODO: Add API call to confirm emergency when timer expires\r\n          // This function will be called when the countdown reaches zero\r\n          // It will confirm the emergency and start the emergency actions\r\n          // const confirmEmergency = async () => {\r\n          //   try {\r\n          //     setIsLoading(true);\r\n          //     await emergencyService.confirmEmergency();\r\n          //     // Update emergency actions status\r\n          //     setEmergencyActions(prev => ({\r\n          //       ...prev,\r\n          //       locationSent: true,\r\n          //       policeCalled: true,\r\n          //       ngoCalled: true,\r\n          //       evidenceSaved: true\r\n          //     }));\r\n          //   } catch (err) {\r\n          //     setError('Failed to confirm emergency');\r\n          //     console.error(err);\r\n          //   } finally {\r\n          //     setIsLoading(false);\r\n          //   }\r\n          // };\r\n          // \r\n          // confirmEmergency();\r\n          \r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const formatTime = (seconds) => {\r\n    return `${seconds}`;\r\n  };\r\n\r\n  // TODO: Add function to cancel emergency\r\n  // This function will be called when the user presses the Cancel Alert button\r\n  // It will cancel the emergency and stop all emergency actions\r\n  // const cancelEmergency = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     await emergencyService.cancelEmergency();\r\n  //     navigation.goBack();\r\n  //   } catch (err) {\r\n  //     setError('Failed to cancel emergency');\r\n  //     console.error(err);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity\r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.logoContainer}>\r\n          <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n          <Text style={styles.logoText}>SafeMitra</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.content}>\r\n        {/* Alert Header */}\r\n        <View style={styles.alertHeader}>\r\n          <View style={styles.alertIconContainer}>\r\n            <Ionicons name=\"alert-circle\" size={40} color=\"#FF3B30\" />\r\n          </View>\r\n          <Text style={styles.alertTitle}>\r\n            Auto Alert Triggered\r\n          </Text>\r\n          <Text style={styles.alertMessage}>\r\n            We detected a trained hotword and triggered emergency actions. If this was accidental, you can cancel it within {timeLeft} seconds.\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Loading Indicator */}\r\n        {/* TODO: Add loading indicator when API calls are in progress */}\r\n        {/* {isLoading && <ActivityIndicator size=\"large\" color=\"#FF3B30\" style={styles.loadingIndicator} />} */}\r\n\r\n        {/* Error Message */}\r\n        {/* TODO: Add error message display */}\r\n        {/* {error && <Text style={styles.errorText}>{error}</Text> */}\r\n\r\n        {/* Timer */}\r\n        <View style={styles.timerContainer}>\r\n          <View style={styles.timerCircle}>\r\n            <Text style={styles.timerText}>\r\n              {formatTime(timeLeft)}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Cancel Button */}\r\n        {!isEmergency && (\r\n          <TouchableOpacity\r\n            style={styles.cancelButton}\r\n            onPress={() => navigation.goBack()}>\r\n            <Text style={styles.cancelButtonText}>\r\n              Cancel Alert\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n\r\n        {/* Status Section */}\r\n        <View style={styles.statusSection}>\r\n          <Text style={styles.statusTitle}>\r\n            Status Updates\r\n          </Text>\r\n          <View style={styles.statusItem}>\r\n            <Ionicons\r\n              name={actionsCompleted ? \"checkmark-circle\" : \"time\"}\r\n              size={24}\r\n              color={actionsCompleted ? \"#4CAF50\" : \"#FFA000\"}\r\n              style={styles.statusIcon}\r\n            />\r\n            <Text style={styles.statusText}>\r\n              Location sent to Guardians\r\n            </Text>\r\n          </View>\r\n          <View style={styles.statusItem}>\r\n            <Ionicons\r\n              name={actionsCompleted ? \"checkmark-circle\" : \"time\"}\r\n              size={24}\r\n              color={actionsCompleted ? \"#4CAF50\" : \"#FFA000\"}\r\n              style={styles.statusIcon}\r\n            />\r\n            <Text style={styles.statusText}>\r\n              Calling Police & NGO\r\n            </Text>\r\n          </View>\r\n          <View style={styles.statusItem}>\r\n            <Ionicons\r\n              name={actionsCompleted ? \"checkmark-circle\" : \"time\"}\r\n              size={24}\r\n              color={actionsCompleted ? \"#4CAF50\" : \"#FFA000\"}\r\n              style={styles.statusIcon}\r\n            />\r\n            <Text style={styles.statusText}>\r\n              Evidence Saved to Blockchain\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AutoAlertActiveScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}