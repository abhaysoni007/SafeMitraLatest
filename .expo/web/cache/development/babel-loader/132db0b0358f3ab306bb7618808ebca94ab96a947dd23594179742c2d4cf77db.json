{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\latest\\\\SafeMitraLatest\\\\screen\\\\functional-part\\\\HotwordDetectionScreen.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { Audio } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport styles from '../styles-part/HotwordDetectionScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASSEMBLY_API_KEY = '6582380b8a8e49cb81545a91e76c8960';\nconst HOTWORDS = ['sos', 'help', 'bachaao'];\nconst HotwordDetectionScreen = () => {\n  const navigation = useNavigation();\n  const [isListening, setIsListening] = useState(false);\n  const [recording, setRecording] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const recordingRef = useRef(null);\n  const isRecordingRef = useRef(false);\n  useEffect(() => {\n    return () => {\n      stopRecording();\n    };\n  }, []);\n  const handleSOSStatus = isActive => {\n    if (isActive) {\n      console.log('ðŸš¨ SOS TRIGGERED SUCCESSFULLY!');\n      Alert.alert('SOS Triggered', 'Emergency alert has been activated!', [{\n        text: 'OK',\n        onPress: () => navigation.navigate('AutoAlertActive')\n      }]);\n    } else {\n      console.log('SOS Status: Deactivated');\n      Alert.alert('SOS Deactivated', 'Emergency alert has been stopped.');\n    }\n  };\n  async function startRecording() {\n    try {\n      if (isRecordingRef.current) return;\n      setIsLoading(true);\n      const {\n        status\n      } = await Audio.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Required', 'Please grant microphone permission to use this feature');\n        return;\n      }\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true\n      });\n      const {\n        recording\n      } = await Audio.Recording.createAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY);\n      recordingRef.current = recording;\n      setRecording(recording);\n      setIsListening(true);\n      isRecordingRef.current = true;\n      console.log('Recording started');\n      setTimeout(async () => {\n        if (isRecordingRef.current) {\n          await processRecording();\n          startRecording();\n        }\n      }, 5000);\n    } catch (err) {\n      console.error('Failed to start recording:', err);\n      Alert.alert('Error', 'Failed to start recording');\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  async function stopRecording() {\n    try {\n      setIsLoading(true);\n      isRecordingRef.current = false;\n      if (recordingRef.current) {\n        await recordingRef.current.stopAndUnloadAsync();\n        recordingRef.current = null;\n      }\n      if (recording) {\n        await recording.stopAndUnloadAsync();\n      }\n      handleSOSStatus(false);\n    } catch (err) {\n      console.error('Error stopping recording:', err);\n    } finally {\n      setIsLoading(false);\n      setRecording(null);\n      setIsListening(false);\n    }\n  }\n  async function processRecording() {\n    try {\n      if (!recordingRef.current) return;\n      const uri = recordingRef.current.getURI();\n      console.log('Processing recording from:', uri);\n      const formData = new FormData();\n      formData.append('audio', {\n        uri: Platform.OS === 'ios' ? uri.replace('file://', '') : uri,\n        type: 'audio/m4a',\n        name: 'recording.m4a'\n      });\n      const uploadResponse = await fetch('https://api.assemblyai.com/v2/upload', {\n        method: 'POST',\n        headers: {\n          authorization: ASSEMBLY_API_KEY\n        },\n        body: formData\n      });\n      if (!uploadResponse.ok) {\n        throw new Error('Upload failed');\n      }\n      const {\n        upload_url\n      } = await uploadResponse.json();\n      const transcriptResponse = await fetch('https://api.assemblyai.com/v2/transcript', {\n        method: 'POST',\n        headers: {\n          authorization: ASSEMBLY_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          audio_url: upload_url,\n          language_code: 'en'\n        })\n      });\n      const {\n        id\n      } = await transcriptResponse.json();\n      let transcriptText = '';\n      while (true) {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const resultResponse = await fetch(`https://api.assemblyai.com/v2/transcript/${id}`, {\n          headers: {\n            authorization: ASSEMBLY_API_KEY\n          }\n        });\n        const result = await resultResponse.json();\n        if (result.status === 'completed') {\n          transcriptText = result.text;\n          break;\n        } else if (result.status === 'error') {\n          throw new Error(result.error);\n        }\n      }\n      if (transcriptText) {\n        const transcriptPath = `${FileSystem.documentDirectory}transcript_${Date.now()}.txt`;\n        await FileSystem.writeAsStringAsync(transcriptPath, transcriptText);\n        console.log('Transcript saved to:', transcriptPath);\n        setTranscript(transcriptText);\n        console.log('Transcript:', transcriptText);\n        const matched = HOTWORDS.find(word => transcriptText.toLowerCase().includes(word));\n        if (matched) {\n          console.log('ðŸš¨ SOS Triggered: Hotword Detected â†’', matched);\n          handleSOSStatus(true);\n        }\n      }\n    } catch (err) {\n      console.error('Error processing recording:', err);\n    }\n  }\n  const toggleHotwordDetection = async () => {\n    if (isListening) {\n      await stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#FF3B30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.logoContainer,\n        children: [_jsxDEV(SafeMitraLogo, {\n          color: \"#FF3B30\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.logoText,\n          children: \"SafeMitra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.content,\n      children: [isLoading && _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#FF3B30\",\n        style: styles.loadingIndicator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }, this), _jsxDEV(View, {\n        style: styles.hotwordCard,\n        children: [_jsxDEV(View, {\n          style: styles.statusIndicator,\n          children: [_jsxDEV(View, {\n            style: [styles.statusDot, {\n              backgroundColor: isListening ? '#4CAF50' : '#FF3B30'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusText,\n            children: isListening ? 'Status: Listening' : 'Status: Paused'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.toggleButton,\n            onPress: toggleHotwordDetection,\n            disabled: isLoading,\n            children: _jsxDEV(Text, {\n              style: styles.toggleButtonText,\n              children: isListening ? 'Stop Recording' : 'Start Recording'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.mainContent,\n          children: [_jsxDEV(View, {\n            style: styles.iconContainer,\n            children: [_jsxDEV(Ionicons, {\n              name: \"mic\",\n              size: 40,\n              color: \"#FF3B30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.waveformContainer,\n              children: [_jsxDEV(View, {\n                style: [styles.waveform, styles.waveform1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: [styles.waveform, styles.waveform2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: [styles.waveform, styles.waveform3]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.title,\n            children: \"Voice Hotword Detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.description,\n            children: \"SafeMitra is listening for emergency keywords: \\\"SOS\\\", \\\"Help\\\", \\\"Bachaao\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), transcript ? _jsxDEV(View, {\n            style: styles.transcriptContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.transcriptLabel,\n              children: \"Last Transcript:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.transcriptText,\n              children: transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\nexport default HotwordDetectionScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","TouchableOpacity","SafeAreaView","Text","ActivityIndicator","Alert","Platform","Ionicons","useNavigation","Audio","FileSystem","SafeMitraLogo","styles","jsxDEV","_jsxDEV","ASSEMBLY_API_KEY","HOTWORDS","HotwordDetectionScreen","navigation","isListening","setIsListening","recording","setRecording","transcript","setTranscript","isLoading","setIsLoading","recordingRef","isRecordingRef","stopRecording","handleSOSStatus","isActive","console","log","alert","text","onPress","navigate","startRecording","current","status","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RecordingOptionsPresets","HIGH_QUALITY","setTimeout","processRecording","err","error","stopAndUnloadAsync","uri","getURI","formData","FormData","append","OS","replace","type","name","uploadResponse","fetch","method","headers","authorization","body","ok","Error","upload_url","json","transcriptResponse","JSON","stringify","audio_url","language_code","id","transcriptText","Promise","resolve","resultResponse","result","transcriptPath","documentDirectory","Date","now","writeAsStringAsync","matched","find","word","toLowerCase","includes","toggleHotwordDetection","style","container","children","header","backButton","goBack","size","color","fileName","_jsxFileName","lineNumber","columnNumber","logoContainer","logoText","content","loadingIndicator","hotwordCard","statusIndicator","statusDot","backgroundColor","statusText","toggleButton","disabled","toggleButtonText","mainContent","iconContainer","waveformContainer","waveform","waveform1","waveform2","waveform3","title","description","transcriptContainer","transcriptLabel"],"sources":["C:/Users/PC/OneDrive/latest/SafeMitraLatest/screen/functional-part/HotwordDetectionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  View, \r\n  TouchableOpacity, \r\n  SafeAreaView, \r\n  Text,\r\n  ActivityIndicator,\r\n  Alert,\r\n  Platform\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Audio } from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\nimport styles from '../styles-part/HotwordDetectionScreenStyles';\r\n\r\n// AssemblyAI API key\r\nconst ASSEMBLY_API_KEY = '6582380b8a8e49cb81545a91e76c8960';\r\nconst HOTWORDS = ['sos', 'help', 'bachaao'];\r\n\r\nconst HotwordDetectionScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recording, setRecording] = useState(null);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const recordingRef = useRef(null);\r\n  const isRecordingRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      stopRecording();\r\n    };\r\n  }, []);\r\n\r\n  const handleSOSStatus = (isActive) => {\r\n    if (isActive) {\r\n      console.log('ðŸš¨ SOS TRIGGERED SUCCESSFULLY!');\r\n      Alert.alert(\r\n        'SOS Triggered',\r\n        'Emergency alert has been activated!',\r\n        [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => navigation.navigate('AutoAlertActive')\r\n          }\r\n        ]\r\n      );\r\n    } else {\r\n      console.log('SOS Status: Deactivated');\r\n      Alert.alert('SOS Deactivated', 'Emergency alert has been stopped.');\r\n    }\r\n  };\r\n\r\n  async function startRecording() {\r\n    try {\r\n      if (isRecordingRef.current) return;\r\n      \r\n      setIsLoading(true);\r\n      const { status } = await Audio.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        Alert.alert('Permission Required', 'Please grant microphone permission to use this feature');\r\n        return;\r\n      }\r\n\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n      });\r\n\r\n      const { recording } = await Audio.Recording.createAsync(\r\n        Audio.RecordingOptionsPresets.HIGH_QUALITY\r\n      );\r\n      \r\n      recordingRef.current = recording;\r\n      setRecording(recording);\r\n      setIsListening(true);\r\n      isRecordingRef.current = true;\r\n      console.log('Recording started');\r\n\r\n      // Process recording every 5 seconds\r\n      setTimeout(async () => {\r\n        if (isRecordingRef.current) {\r\n          await processRecording();\r\n          startRecording(); // Start new recording\r\n        }\r\n      }, 5000);\r\n\r\n    } catch (err) {\r\n      console.error('Failed to start recording:', err);\r\n      Alert.alert('Error', 'Failed to start recording');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function stopRecording() {\r\n    try {\r\n      setIsLoading(true);\r\n      isRecordingRef.current = false;\r\n      \r\n      if (recordingRef.current) {\r\n        await recordingRef.current.stopAndUnloadAsync();\r\n        recordingRef.current = null;\r\n      }\r\n      if (recording) {\r\n        await recording.stopAndUnloadAsync();\r\n      }\r\n      \r\n      handleSOSStatus(false);\r\n    } catch (err) {\r\n      console.error('Error stopping recording:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setRecording(null);\r\n      setIsListening(false);\r\n    }\r\n  }\r\n\r\n  async function processRecording() {\r\n    try {\r\n      if (!recordingRef.current) return;\r\n\r\n      const uri = recordingRef.current.getURI();\r\n      console.log('Processing recording from:', uri);\r\n\r\n      // Create form data\r\n      const formData = new FormData();\r\n      formData.append('audio', {\r\n        uri: Platform.OS === 'ios' ? uri.replace('file://', '') : uri,\r\n        type: 'audio/m4a',\r\n        name: 'recording.m4a'\r\n      });\r\n\r\n      // Upload to AssemblyAI\r\n      const uploadResponse = await fetch('https://api.assemblyai.com/v2/upload', {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: ASSEMBLY_API_KEY,\r\n        },\r\n        body: formData\r\n      });\r\n\r\n      if (!uploadResponse.ok) {\r\n        throw new Error('Upload failed');\r\n      }\r\n\r\n      const { upload_url } = await uploadResponse.json();\r\n\r\n      // Transcribe\r\n      const transcriptResponse = await fetch('https://api.assemblyai.com/v2/transcript', {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: ASSEMBLY_API_KEY,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          audio_url: upload_url,\r\n          language_code: 'en'\r\n        }),\r\n      });\r\n\r\n      const { id } = await transcriptResponse.json();\r\n\r\n      // Poll for results\r\n      let transcriptText = '';\r\n      while (true) {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        const resultResponse = await fetch(\r\n          `https://api.assemblyai.com/v2/transcript/${id}`,\r\n          {\r\n            headers: { authorization: ASSEMBLY_API_KEY },\r\n          }\r\n        );\r\n        const result = await resultResponse.json();\r\n        \r\n        if (result.status === 'completed') {\r\n          transcriptText = result.text;\r\n          break;\r\n        } else if (result.status === 'error') {\r\n          throw new Error(result.error);\r\n        }\r\n      }\r\n\r\n      if (transcriptText) {\r\n        // Save transcript to text file\r\n        const transcriptPath = `${FileSystem.documentDirectory}transcript_${Date.now()}.txt`;\r\n        await FileSystem.writeAsStringAsync(transcriptPath, transcriptText);\r\n        console.log('Transcript saved to:', transcriptPath);\r\n\r\n        setTranscript(transcriptText);\r\n        console.log('Transcript:', transcriptText);\r\n\r\n        // Check for hotwords\r\n        const matched = HOTWORDS.find(word =>\r\n          transcriptText.toLowerCase().includes(word)\r\n        );\r\n\r\n        if (matched) {\r\n          console.log('ðŸš¨ SOS Triggered: Hotword Detected â†’', matched);\r\n          handleSOSStatus(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error processing recording:', err);\r\n    }\r\n  }\r\n\r\n  const toggleHotwordDetection = async () => {\r\n    if (isListening) {\r\n      await stopRecording();\r\n    } else {\r\n      await startRecording();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.logoContainer}>\r\n          <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n          <Text style={styles.logoText}>SafeMitra</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <View style={styles.content}>\r\n        {isLoading && <ActivityIndicator size=\"large\" color=\"#FF3B30\" style={styles.loadingIndicator} />}\r\n\r\n        <View style={styles.hotwordCard}>\r\n          <View style={styles.statusIndicator}>\r\n            <View style={[\r\n              styles.statusDot,\r\n              { backgroundColor: isListening ? '#4CAF50' : '#FF3B30' }\r\n            ]} />\r\n            <Text style={styles.statusText}>\r\n              {isListening ? 'Status: Listening' : 'Status: Paused'}\r\n            </Text>\r\n            \r\n            <TouchableOpacity \r\n              style={styles.toggleButton}\r\n              onPress={toggleHotwordDetection}\r\n              disabled={isLoading}\r\n            >\r\n              <Text style={styles.toggleButtonText}>\r\n                {isListening ? 'Stop Recording' : 'Start Recording'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.mainContent}>\r\n            <View style={styles.iconContainer}>\r\n              <Ionicons name=\"mic\" size={40} color=\"#FF3B30\" />\r\n              <View style={styles.waveformContainer}>\r\n                <View style={[styles.waveform, styles.waveform1]} />\r\n                <View style={[styles.waveform, styles.waveform2]} />\r\n                <View style={[styles.waveform, styles.waveform3]} />\r\n              </View>\r\n            </View>\r\n\r\n            <Text style={styles.title}>Voice Hotword Detection</Text>\r\n            <Text style={styles.description}>\r\n              SafeMitra is listening for emergency keywords: \"SOS\", \"Help\", \"Bachaao\"\r\n            </Text>\r\n\r\n            {transcript ? (\r\n              <View style={styles.transcriptContainer}>\r\n                <Text style={styles.transcriptLabel}>Last Transcript:</Text>\r\n                <Text style={styles.transcriptText}>{transcript}</Text>\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default HotwordDetectionScreen; \r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAU3D,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,MAAM,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,MAAMC,gBAAgB,GAAG,kCAAkC;AAC3D,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC;AAE3C,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMC,UAAU,GAAGV,aAAa,CAAC,CAAC;EAClC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM8B,YAAY,GAAG5B,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM6B,cAAc,GAAG7B,MAAM,CAAC,KAAK,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX+B,aAAa,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpC,IAAIA,QAAQ,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C5B,KAAK,CAAC6B,KAAK,CACT,eAAe,EACf,qCAAqC,EACrC,CACE;QACEC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACmB,QAAQ,CAAC,iBAAiB;MACtD,CAAC,CAEL,CAAC;IACH,CAAC,MAAM;MACLL,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC5B,KAAK,CAAC6B,KAAK,CAAC,iBAAiB,EAAE,mCAAmC,CAAC;IACrE;EACF,CAAC;EAED,eAAeI,cAAcA,CAAA,EAAG;IAC9B,IAAI;MACF,IAAIV,cAAc,CAACW,OAAO,EAAE;MAE5Bb,YAAY,CAAC,IAAI,CAAC;MAClB,MAAM;QAAEc;MAAO,CAAC,GAAG,MAAM/B,KAAK,CAACgC,uBAAuB,CAAC,CAAC;MACxD,IAAID,MAAM,KAAK,SAAS,EAAE;QACxBnC,KAAK,CAAC6B,KAAK,CAAC,qBAAqB,EAAE,wDAAwD,CAAC;QAC5F;MACF;MAEA,MAAMzB,KAAK,CAACiC,iBAAiB,CAAC;QAC5BC,kBAAkB,EAAE,IAAI;QACxBC,oBAAoB,EAAE;MACxB,CAAC,CAAC;MAEF,MAAM;QAAEvB;MAAU,CAAC,GAAG,MAAMZ,KAAK,CAACoC,SAAS,CAACC,WAAW,CACrDrC,KAAK,CAACsC,uBAAuB,CAACC,YAChC,CAAC;MAEDrB,YAAY,CAACY,OAAO,GAAGlB,SAAS;MAChCC,YAAY,CAACD,SAAS,CAAC;MACvBD,cAAc,CAAC,IAAI,CAAC;MACpBQ,cAAc,CAACW,OAAO,GAAG,IAAI;MAC7BP,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAGhCgB,UAAU,CAAC,YAAY;QACrB,IAAIrB,cAAc,CAACW,OAAO,EAAE;UAC1B,MAAMW,gBAAgB,CAAC,CAAC;UACxBZ,cAAc,CAAC,CAAC;QAClB;MACF,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZnB,OAAO,CAACoB,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC;MAChD9C,KAAK,CAAC6B,KAAK,CAAC,OAAO,EAAE,2BAA2B,CAAC;IACnD,CAAC,SAAS;MACRR,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,eAAeG,aAAaA,CAAA,EAAG;IAC7B,IAAI;MACFH,YAAY,CAAC,IAAI,CAAC;MAClBE,cAAc,CAACW,OAAO,GAAG,KAAK;MAE9B,IAAIZ,YAAY,CAACY,OAAO,EAAE;QACxB,MAAMZ,YAAY,CAACY,OAAO,CAACc,kBAAkB,CAAC,CAAC;QAC/C1B,YAAY,CAACY,OAAO,GAAG,IAAI;MAC7B;MACA,IAAIlB,SAAS,EAAE;QACb,MAAMA,SAAS,CAACgC,kBAAkB,CAAC,CAAC;MACtC;MAEAvB,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZnB,OAAO,CAACoB,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;IACjD,CAAC,SAAS;MACRzB,YAAY,CAAC,KAAK,CAAC;MACnBJ,YAAY,CAAC,IAAI,CAAC;MAClBF,cAAc,CAAC,KAAK,CAAC;IACvB;EACF;EAEA,eAAe8B,gBAAgBA,CAAA,EAAG;IAChC,IAAI;MACF,IAAI,CAACvB,YAAY,CAACY,OAAO,EAAE;MAE3B,MAAMe,GAAG,GAAG3B,YAAY,CAACY,OAAO,CAACgB,MAAM,CAAC,CAAC;MACzCvB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEqB,GAAG,CAAC;MAG9C,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE;QACvBJ,GAAG,EAAEhD,QAAQ,CAACqD,EAAE,KAAK,KAAK,GAAGL,GAAG,CAACM,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,GAAGN,GAAG;QAC7DO,IAAI,EAAE,WAAW;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;MAGF,MAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,EAAEpD;QACjB,CAAC;QACDqD,IAAI,EAAEZ;MACR,CAAC,CAAC;MAEF,IAAI,CAACO,cAAc,CAACM,EAAE,EAAE;QACtB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MAEA,MAAM;QAAEC;MAAW,CAAC,GAAG,MAAMR,cAAc,CAACS,IAAI,CAAC,CAAC;MAGlD,MAAMC,kBAAkB,GAAG,MAAMT,KAAK,CAAC,0CAA0C,EAAE;QACjFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,EAAEpD,gBAAgB;UAC/B,cAAc,EAAE;QAClB,CAAC;QACDqD,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAEL,UAAU;UACrBM,aAAa,EAAE;QACjB,CAAC;MACH,CAAC,CAAC;MAEF,MAAM;QAAEC;MAAG,CAAC,GAAG,MAAML,kBAAkB,CAACD,IAAI,CAAC,CAAC;MAG9C,IAAIO,cAAc,GAAG,EAAE;MACvB,OAAO,IAAI,EAAE;QACX,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD,MAAMC,cAAc,GAAG,MAAMlB,KAAK,CAChC,4CAA4Cc,EAAE,EAAE,EAChD;UACEZ,OAAO,EAAE;YAAEC,aAAa,EAAEpD;UAAiB;QAC7C,CACF,CAAC;QACD,MAAMoE,MAAM,GAAG,MAAMD,cAAc,CAACV,IAAI,CAAC,CAAC;QAE1C,IAAIW,MAAM,CAAC3C,MAAM,KAAK,WAAW,EAAE;UACjCuC,cAAc,GAAGI,MAAM,CAAChD,IAAI;UAC5B;QACF,CAAC,MAAM,IAAIgD,MAAM,CAAC3C,MAAM,KAAK,OAAO,EAAE;UACpC,MAAM,IAAI8B,KAAK,CAACa,MAAM,CAAC/B,KAAK,CAAC;QAC/B;MACF;MAEA,IAAI2B,cAAc,EAAE;QAElB,MAAMK,cAAc,GAAG,GAAG1E,UAAU,CAAC2E,iBAAiB,cAAcC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAM;QACpF,MAAM7E,UAAU,CAAC8E,kBAAkB,CAACJ,cAAc,EAAEL,cAAc,CAAC;QACnE/C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEmD,cAAc,CAAC;QAEnD5D,aAAa,CAACuD,cAAc,CAAC;QAC7B/C,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE8C,cAAc,CAAC;QAG1C,MAAMU,OAAO,GAAGzE,QAAQ,CAAC0E,IAAI,CAACC,IAAI,IAChCZ,cAAc,CAACa,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAC5C,CAAC;QAED,IAAIF,OAAO,EAAE;UACXzD,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEwD,OAAO,CAAC;UAC5D3D,eAAe,CAAC,IAAI,CAAC;QACvB;MACF;IACF,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZnB,OAAO,CAACoB,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAAC;IACnD;EACF;EAEA,MAAM2C,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI3E,WAAW,EAAE;MACf,MAAMU,aAAa,CAAC,CAAC;IACvB,CAAC,MAAM;MACL,MAAMS,cAAc,CAAC,CAAC;IACxB;EACF,CAAC;EAED,OACExB,OAAA,CAACZ,YAAY;IAAC6F,KAAK,EAAEnF,MAAM,CAACoF,SAAU;IAAAC,QAAA,GAEpCnF,OAAA,CAACd,IAAI;MAAC+F,KAAK,EAAEnF,MAAM,CAACsF,MAAO;MAAAD,QAAA,GACzBnF,OAAA,CAACb,gBAAgB;QACf8F,KAAK,EAAEnF,MAAM,CAACuF,UAAW;QACzB/D,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACkF,MAAM,CAAC,CAAE;QAAAH,QAAA,EACnCnF,OAAA,CAACP,QAAQ;UAACuD,IAAI,EAAC,YAAY;UAACuC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,EACnB5F,OAAA,CAACd,IAAI;QAAC+F,KAAK,EAAEnF,MAAM,CAAC+F,aAAc;QAAAV,QAAA,GAChCnF,OAAA,CAACH,aAAa;UAAC2F,KAAK,EAAC,SAAS;UAACD,IAAI,EAAE;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3C5F,OAAA,CAACX,IAAI;UAAC4F,KAAK,EAAEnF,MAAM,CAACgG,QAAS;UAAAX,QAAA,EAAC;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGP5F,OAAA,CAACd,IAAI;MAAC+F,KAAK,EAAEnF,MAAM,CAACiG,OAAQ;MAAAZ,QAAA,GACzBxE,SAAS,IAAIX,OAAA,CAACV,iBAAiB;QAACiG,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC,SAAS;QAACP,KAAK,EAAEnF,MAAM,CAACkG;MAAiB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEhG5F,OAAA,CAACd,IAAI;QAAC+F,KAAK,EAAEnF,MAAM,CAACmG,WAAY;QAAAd,QAAA,GAC9BnF,OAAA,CAACd,IAAI;UAAC+F,KAAK,EAAEnF,MAAM,CAACoG,eAAgB;UAAAf,QAAA,GAClCnF,OAAA,CAACd,IAAI;YAAC+F,KAAK,EAAE,CACXnF,MAAM,CAACqG,SAAS,EAChB;cAAEC,eAAe,EAAE/F,WAAW,GAAG,SAAS,GAAG;YAAU,CAAC;UACxD;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACL5F,OAAA,CAACX,IAAI;YAAC4F,KAAK,EAAEnF,MAAM,CAACuG,UAAW;YAAAlB,QAAA,EAC5B9E,WAAW,GAAG,mBAAmB,GAAG;UAAgB;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,EAEP5F,OAAA,CAACb,gBAAgB;YACf8F,KAAK,EAAEnF,MAAM,CAACwG,YAAa;YAC3BhF,OAAO,EAAE0D,sBAAuB;YAChCuB,QAAQ,EAAE5F,SAAU;YAAAwE,QAAA,EAEpBnF,OAAA,CAACX,IAAI;cAAC4F,KAAK,EAAEnF,MAAM,CAAC0G,gBAAiB;cAAArB,QAAA,EAClC9E,WAAW,GAAG,gBAAgB,GAAG;YAAiB;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,EAEP5F,OAAA,CAACd,IAAI;UAAC+F,KAAK,EAAEnF,MAAM,CAAC2G,WAAY;UAAAtB,QAAA,GAC9BnF,OAAA,CAACd,IAAI;YAAC+F,KAAK,EAAEnF,MAAM,CAAC4G,aAAc;YAAAvB,QAAA,GAChCnF,OAAA,CAACP,QAAQ;cAACuD,IAAI,EAAC,KAAK;cAACuC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACjD5F,OAAA,CAACd,IAAI;cAAC+F,KAAK,EAAEnF,MAAM,CAAC6G,iBAAkB;cAAAxB,QAAA,GACpCnF,OAAA,CAACd,IAAI;gBAAC+F,KAAK,EAAE,CAACnF,MAAM,CAAC8G,QAAQ,EAAE9G,MAAM,CAAC+G,SAAS;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACpD5F,OAAA,CAACd,IAAI;gBAAC+F,KAAK,EAAE,CAACnF,MAAM,CAAC8G,QAAQ,EAAE9G,MAAM,CAACgH,SAAS;cAAE;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACpD5F,OAAA,CAACd,IAAI;gBAAC+F,KAAK,EAAE,CAACnF,MAAM,CAAC8G,QAAQ,EAAE9G,MAAM,CAACiH,SAAS;cAAE;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEP5F,OAAA,CAACX,IAAI;YAAC4F,KAAK,EAAEnF,MAAM,CAACkH,KAAM;YAAA7B,QAAA,EAAC;UAAuB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACzD5F,OAAA,CAACX,IAAI;YAAC4F,KAAK,EAAEnF,MAAM,CAACmH,WAAY;YAAA9B,QAAA,EAAC;UAEjC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAENnF,UAAU,GACTT,OAAA,CAACd,IAAI;YAAC+F,KAAK,EAAEnF,MAAM,CAACoH,mBAAoB;YAAA/B,QAAA,GACtCnF,OAAA,CAACX,IAAI;cAAC4F,KAAK,EAAEnF,MAAM,CAACqH,eAAgB;cAAAhC,QAAA,EAAC;YAAgB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC5D5F,OAAA,CAACX,IAAI;cAAC4F,KAAK,EAAEnF,MAAM,CAACmE,cAAe;cAAAkB,QAAA,EAAE1E;YAAU;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,GACL,IAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB,CAAC;AAED,eAAezF,sBAAsB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}