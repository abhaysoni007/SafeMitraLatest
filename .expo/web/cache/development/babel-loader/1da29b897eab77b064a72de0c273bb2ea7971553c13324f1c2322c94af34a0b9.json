{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\latest\\\\SafeMitraLatest\\\\screen\\\\functional-part\\\\HotwordDetectionScreen.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { Audio } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport styles from '../styles-part/HotwordDetectionScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASSEMBLY_API_KEY = 'YOUR_ASSEMBLY_AI_API_KEY_HERE';\nconst HOTWORDS = ['sos', 'help', 'bachaao'];\nconst HotwordDetectionScreen = () => {\n  const navigation = useNavigation();\n  const [isListening, setIsListening] = useState(false);\n  const [recording, setRecording] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const recordingRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (recordingRef.current) {\n        recordingRef.current.stopAndUnloadAsync();\n        recordingRef.current = null;\n      }\n      if (recording) {\n        recording.stopAndUnloadAsync();\n      }\n    };\n  }, []);\n  async function startRecording() {\n    try {\n      setIsLoading(true);\n      if (recordingRef.current) {\n        await recordingRef.current.stopAndUnloadAsync();\n        recordingRef.current = null;\n      }\n      if (recording) {\n        await recording.stopAndUnloadAsync();\n      }\n      const {\n        status\n      } = await Audio.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Required', 'Please grant microphone permission to use this feature');\n        return;\n      }\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true\n      });\n      const {\n        recording\n      } = await Audio.Recording.createAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY);\n      recordingRef.current = recording;\n      setRecording(recording);\n      setIsListening(true);\n      console.log('Recording started');\n    } catch (err) {\n      console.error('Failed to start recording', err);\n      Alert.alert('Error', 'Failed to start recording');\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  async function stopRecording() {\n    try {\n      setIsLoading(true);\n      console.log('Stopping recording...');\n      if (!recordingRef.current) return;\n      await recordingRef.current.stopAndUnloadAsync();\n      const uri = recordingRef.current.getURI();\n      console.log('Recording stopped and stored at', uri);\n      const base64Audio = await FileSystem.readAsStringAsync(uri, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      const audioBuffer = Buffer.from(base64Audio, 'base64');\n      const uploadUrl = await uploadToAssembly(audioBuffer);\n      if (uploadUrl) {\n        const transcriptText = await transcribeWithAssembly(uploadUrl);\n        setTranscript(transcriptText);\n        console.log('Transcript:', transcriptText);\n        const matched = HOTWORDS.find(word => transcriptText.toLowerCase().includes(word));\n        if (matched) {\n          console.log('ðŸš¨ SOS Triggered: Hotword Detected â†’', matched);\n          navigation.navigate('AutoAlertActive');\n        } else {\n          console.log('No hotword detected.');\n        }\n      }\n    } catch (err) {\n      console.error('Error in stopRecording:', err);\n      Alert.alert('Error', 'Failed to process recording');\n    } finally {\n      setIsLoading(false);\n      setRecording(null);\n      setIsListening(false);\n    }\n  }\n  async function uploadToAssembly(audioBuffer) {\n    try {\n      const response = await fetch('https://api.assemblyai.com/v2/upload', {\n        method: 'POST',\n        headers: {\n          authorization: ASSEMBLY_API_KEY,\n          'Transfer-Encoding': 'chunked'\n        },\n        body: audioBuffer\n      });\n      const data = await response.json();\n      return data.upload_url;\n    } catch (error) {\n      console.error('Upload failed:', error);\n      Alert.alert('Error', 'Failed to upload audio');\n      return null;\n    }\n  }\n  async function transcribeWithAssembly(audioUrl) {\n    try {\n      const response = await fetch('https://api.assemblyai.com/v2/transcript', {\n        method: 'POST',\n        headers: {\n          authorization: ASSEMBLY_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          audio_url: audioUrl\n        })\n      });\n      const data = await response.json();\n      const transcriptId = data.id;\n      let completed = false;\n      let transcriptText = '';\n      while (!completed) {\n        await new Promise(res => setTimeout(res, 3000));\n        const pollingRes = await fetch(`https://api.assemblyai.com/v2/transcript/${transcriptId}`, {\n          headers: {\n            authorization: ASSEMBLY_API_KEY\n          }\n        });\n        const pollingData = await pollingRes.json();\n        if (pollingData.status === 'completed') {\n          completed = true;\n          transcriptText = pollingData.text;\n        } else if (pollingData.status === 'error') {\n          throw new Error(pollingData.error);\n        }\n      }\n      return transcriptText;\n    } catch (error) {\n      console.error('Transcription failed:', error);\n      Alert.alert('Error', 'Failed to transcribe audio');\n      return '';\n    }\n  }\n  const toggleHotwordDetection = async () => {\n    if (isListening) {\n      await stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#FF3B30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.logoContainer,\n        children: [_jsxDEV(SafeMitraLogo, {\n          color: \"#FF3B30\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.logoText,\n          children: \"SafeMitra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.content,\n      children: [isLoading && _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#FF3B30\",\n        style: styles.loadingIndicator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }, this), _jsxDEV(View, {\n        style: styles.hotwordCard,\n        children: [_jsxDEV(View, {\n          style: styles.statusIndicator,\n          children: [_jsxDEV(View, {\n            style: [styles.statusDot, {\n              backgroundColor: isListening ? '#4CAF50' : '#FF3B30'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusText,\n            children: isListening ? 'Status: Listening' : 'Status: Paused'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.toggleButton,\n            onPress: toggleHotwordDetection,\n            disabled: isLoading,\n            children: _jsxDEV(Text, {\n              style: styles.toggleButtonText,\n              children: isListening ? 'Stop Recording' : 'Start Recording'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.mainContent,\n          children: [_jsxDEV(View, {\n            style: styles.iconContainer,\n            children: [_jsxDEV(Ionicons, {\n              name: \"mic\",\n              size: 40,\n              color: \"#FF3B30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.waveformContainer,\n              children: [_jsxDEV(View, {\n                style: [styles.waveform, styles.waveform1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: [styles.waveform, styles.waveform2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: [styles.waveform, styles.waveform3]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.title,\n            children: \"Voice Hotword Detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.description,\n            children: \"SafeMitra is listening for emergency keywords: \\\"SOS\\\", \\\"Help\\\", \\\"Bachaao\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), transcript ? _jsxDEV(View, {\n            style: styles.transcriptContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.transcriptLabel,\n              children: \"Last Transcript:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.transcriptText,\n              children: transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\nexport default HotwordDetectionScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","TouchableOpacity","SafeAreaView","Text","ActivityIndicator","Alert","Ionicons","useNavigation","Audio","FileSystem","SafeMitraLogo","styles","jsxDEV","_jsxDEV","ASSEMBLY_API_KEY","HOTWORDS","HotwordDetectionScreen","navigation","isListening","setIsListening","recording","setRecording","transcript","setTranscript","isLoading","setIsLoading","recordingRef","current","stopAndUnloadAsync","startRecording","status","requestPermissionsAsync","alert","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RecordingOptionsPresets","HIGH_QUALITY","console","log","err","error","stopRecording","uri","getURI","base64Audio","readAsStringAsync","encoding","EncodingType","Base64","audioBuffer","Buffer","from","uploadUrl","uploadToAssembly","transcriptText","transcribeWithAssembly","matched","find","word","toLowerCase","includes","navigate","response","fetch","method","headers","authorization","body","data","json","upload_url","audioUrl","JSON","stringify","audio_url","transcriptId","id","completed","Promise","res","setTimeout","pollingRes","pollingData","text","Error","toggleHotwordDetection","style","container","children","header","backButton","onPress","goBack","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","logoContainer","logoText","content","loadingIndicator","hotwordCard","statusIndicator","statusDot","backgroundColor","statusText","toggleButton","disabled","toggleButtonText","mainContent","iconContainer","waveformContainer","waveform","waveform1","waveform2","waveform3","title","description","transcriptContainer","transcriptLabel"],"sources":["C:/Users/PC/OneDrive/latest/SafeMitraLatest/screen/functional-part/HotwordDetectionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  View, \r\n  TouchableOpacity, \r\n  SafeAreaView, \r\n  Text,\r\n  ActivityIndicator,\r\n  Alert\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Audio } from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\nimport styles from '../styles-part/HotwordDetectionScreenStyles';\r\n\r\n// Replace with your actual AssemblyAI API key\r\nconst ASSEMBLY_API_KEY = 'YOUR_ASSEMBLY_AI_API_KEY_HERE';\r\nconst HOTWORDS = ['sos', 'help', 'bachaao'];\r\n\r\nconst HotwordDetectionScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recording, setRecording] = useState(null);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const recordingRef = useRef(null);\r\n\r\n  // Add cleanup effect\r\n  useEffect(() => {\r\n    return () => {\r\n      if (recordingRef.current) {\r\n        recordingRef.current.stopAndUnloadAsync();\r\n        recordingRef.current = null;\r\n      }\r\n      if (recording) {\r\n        recording.stopAndUnloadAsync();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  async function startRecording() {\r\n    try {\r\n      setIsLoading(true);\r\n      // Clean up any existing recording\r\n      if (recordingRef.current) {\r\n        await recordingRef.current.stopAndUnloadAsync();\r\n        recordingRef.current = null;\r\n      }\r\n      if (recording) {\r\n        await recording.stopAndUnloadAsync();\r\n      }\r\n\r\n      const { status } = await Audio.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        Alert.alert('Permission Required', 'Please grant microphone permission to use this feature');\r\n        return;\r\n      }\r\n\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n      });\r\n\r\n      const { recording } = await Audio.Recording.createAsync(\r\n        Audio.RecordingOptionsPresets.HIGH_QUALITY\r\n      );\r\n      recordingRef.current = recording;\r\n      setRecording(recording);\r\n      setIsListening(true);\r\n      console.log('Recording started');\r\n    } catch (err) {\r\n      console.error('Failed to start recording', err);\r\n      Alert.alert('Error', 'Failed to start recording');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function stopRecording() {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Stopping recording...');\r\n      if (!recordingRef.current) return;\r\n\r\n      await recordingRef.current.stopAndUnloadAsync();\r\n      const uri = recordingRef.current.getURI();\r\n      console.log('Recording stopped and stored at', uri);\r\n\r\n      const base64Audio = await FileSystem.readAsStringAsync(uri, {\r\n        encoding: FileSystem.EncodingType.Base64,\r\n      });\r\n\r\n      const audioBuffer = Buffer.from(base64Audio, 'base64');\r\n      const uploadUrl = await uploadToAssembly(audioBuffer);\r\n\r\n      if (uploadUrl) {\r\n        const transcriptText = await transcribeWithAssembly(uploadUrl);\r\n        setTranscript(transcriptText);\r\n        console.log('Transcript:', transcriptText);\r\n\r\n        const matched = HOTWORDS.find(word =>\r\n          transcriptText.toLowerCase().includes(word)\r\n        );\r\n\r\n        if (matched) {\r\n          console.log('ðŸš¨ SOS Triggered: Hotword Detected â†’', matched);\r\n          navigation.navigate('AutoAlertActive');\r\n        } else {\r\n          console.log('No hotword detected.');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error in stopRecording:', err);\r\n      Alert.alert('Error', 'Failed to process recording');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setRecording(null);\r\n      setIsListening(false);\r\n    }\r\n  }\r\n\r\n  async function uploadToAssembly(audioBuffer) {\r\n    try {\r\n      const response = await fetch('https://api.assemblyai.com/v2/upload', {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: ASSEMBLY_API_KEY,\r\n          'Transfer-Encoding': 'chunked',\r\n        },\r\n        body: audioBuffer,\r\n      });\r\n\r\n      const data = await response.json();\r\n      return data.upload_url;\r\n    } catch (error) {\r\n      console.error('Upload failed:', error);\r\n      Alert.alert('Error', 'Failed to upload audio');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async function transcribeWithAssembly(audioUrl) {\r\n    try {\r\n      const response = await fetch('https://api.assemblyai.com/v2/transcript', {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: ASSEMBLY_API_KEY,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ audio_url: audioUrl }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const transcriptId = data.id;\r\n\r\n      let completed = false;\r\n      let transcriptText = '';\r\n      while (!completed) {\r\n        await new Promise(res => setTimeout(res, 3000));\r\n        const pollingRes = await fetch(\r\n          `https://api.assemblyai.com/v2/transcript/${transcriptId}`,\r\n          {\r\n            headers: { authorization: ASSEMBLY_API_KEY },\r\n          }\r\n        );\r\n        const pollingData = await pollingRes.json();\r\n        if (pollingData.status === 'completed') {\r\n          completed = true;\r\n          transcriptText = pollingData.text;\r\n        } else if (pollingData.status === 'error') {\r\n          throw new Error(pollingData.error);\r\n        }\r\n      }\r\n\r\n      return transcriptText;\r\n    } catch (error) {\r\n      console.error('Transcription failed:', error);\r\n      Alert.alert('Error', 'Failed to transcribe audio');\r\n      return '';\r\n    }\r\n  }\r\n\r\n  const toggleHotwordDetection = async () => {\r\n    if (isListening) {\r\n      await stopRecording();\r\n    } else {\r\n      await startRecording();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.logoContainer}>\r\n          <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n          <Text style={styles.logoText}>SafeMitra</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <View style={styles.content}>\r\n        {/* Loading Indicator */}\r\n        {isLoading && <ActivityIndicator size=\"large\" color=\"#FF3B30\" style={styles.loadingIndicator} />}\r\n\r\n        <View style={styles.hotwordCard}>\r\n          {/* Status Indicator */}\r\n          <View style={styles.statusIndicator}>\r\n            <View style={[\r\n              styles.statusDot,\r\n              { backgroundColor: isListening ? '#4CAF50' : '#FF3B30' }\r\n            ]} />\r\n            <Text style={styles.statusText}>\r\n              {isListening ? 'Status: Listening' : 'Status: Paused'}\r\n            </Text>\r\n            \r\n            {/* Toggle Button */}\r\n            <TouchableOpacity \r\n              style={styles.toggleButton}\r\n              onPress={toggleHotwordDetection}\r\n              disabled={isLoading}\r\n            >\r\n              <Text style={styles.toggleButtonText}>\r\n                {isListening ? 'Stop Recording' : 'Start Recording'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Main Content */}\r\n          <View style={styles.mainContent}>\r\n            {/* Icon */}\r\n            <View style={styles.iconContainer}>\r\n              <Ionicons name=\"mic\" size={40} color=\"#FF3B30\" />\r\n              <View style={styles.waveformContainer}>\r\n                <View style={[styles.waveform, styles.waveform1]} />\r\n                <View style={[styles.waveform, styles.waveform2]} />\r\n                <View style={[styles.waveform, styles.waveform3]} />\r\n              </View>\r\n            </View>\r\n\r\n            {/* Title */}\r\n            <Text style={styles.title}>Voice Hotword Detection</Text>\r\n\r\n            {/* Description */}\r\n            <Text style={styles.description}>\r\n              SafeMitra is listening for emergency keywords: \"SOS\", \"Help\", \"Bachaao\"\r\n            </Text>\r\n\r\n            {/* Transcript Display */}\r\n            {transcript ? (\r\n              <View style={styles.transcriptContainer}>\r\n                <Text style={styles.transcriptLabel}>Last Transcript:</Text>\r\n                <Text style={styles.transcriptText}>{transcript}</Text>\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default HotwordDetectionScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}