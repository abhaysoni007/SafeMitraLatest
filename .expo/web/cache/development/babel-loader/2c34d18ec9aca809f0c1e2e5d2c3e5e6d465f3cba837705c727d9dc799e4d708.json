{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\latest\\\\SafeMitraLatest\\\\screen\\\\functional-part\\\\VoiceTrainingScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { styles } from '../styles-part/VoiceTrainingScreenStyles';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VoiceTrainingScreen = ({\n  navigation\n}) => {\n  const [recordings, setRecordings] = useState([null, null, null]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [currentSample, setCurrentSample] = useState(0);\n  const [isTrainingComplete, setIsTrainingComplete] = useState(false);\n  const [trainingFailed, setTrainingFailed] = useState(false);\n  const pulseAnim = new Animated.Value(1);\n  const [showMandatoryModal, setShowMandatoryModal] = useState(false);\n  const [showCompleteModal, setShowCompleteModal] = useState(false);\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('beforeRemove', e => {\n      if (isTrainingComplete) {\n        return;\n      }\n      e.preventDefault();\n      setShowMandatoryModal(true);\n    });\n    return unsubscribe;\n  }, [navigation, isTrainingComplete]);\n  useEffect(() => {\n    if (isRecording) {\n      Animated.loop(Animated.sequence([Animated.timing(pulseAnim, {\n        toValue: 1.2,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(pulseAnim, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      })])).start();\n    } else {\n      pulseAnim.setValue(1);\n    }\n  }, [isRecording]);\n  const handleStartRecording = async index => {\n    setIsRecording(true);\n    setCurrentSample(index);\n    setTimeout(() => {\n      handleStopRecording(index);\n    }, 3000);\n  };\n  const handleStopRecording = async index => {\n    setIsRecording(false);\n    const newRecordings = [...recordings];\n    newRecordings[index] = {\n      completed: true\n    };\n    setRecordings(newRecordings);\n  };\n  const handleReRecord = index => {\n    const newRecordings = [...recordings];\n    newRecordings[index] = null;\n    setRecordings(newRecordings);\n    setIsTrainingComplete(false);\n  };\n  const getProgress = () => {\n    return recordings.filter(r => r !== null).length;\n  };\n  const handleContinue = async () => {\n    if (getProgress() === 3) {\n      setIsTrainingComplete(true);\n      setShowCompleteModal(true);\n    }\n  };\n  const handleTrainingFailed = () => {\n    setTrainingFailed(true);\n  };\n  const handleRetry = () => {\n    setTrainingFailed(false);\n  };\n  useEffect(() => {\n    handleTrainingFailed();\n  }, []);\n  const renderMicButton = index => {\n    const isComplete = recordings[index]?.completed;\n    const isActive = currentSample === index && isRecording;\n    return _jsxDEV(View, {\n      style: styles.sampleContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.sampleText,\n        children: [\"Voice Sample \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), _jsxDEV(Animated.View, {\n        style: [styles.micButtonContainer, isActive && {\n          transform: [{\n            scale: pulseAnim\n          }]\n        }],\n        children: _jsxDEV(TouchableOpacity, {\n          style: [styles.micButton, isComplete && styles.micButtonComplete],\n          onPress: () => !isRecording && handleStartRecording(index),\n          disabled: isRecording,\n          children: isComplete ? _jsxDEV(Ionicons, {\n            name: \"checkmark\",\n            size: 24,\n            color: \"#FFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this) : _jsxDEV(Ionicons, {\n            name: \"mic\",\n            size: 24,\n            color: \"#FFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [showMandatoryModal && _jsxDEV(View, {\n      style: styles.trainingFailedOverlay,\n      children: _jsxDEV(View, {\n        style: styles.trainingFailedBox,\n        children: [_jsxDEV(Ionicons, {\n          name: \"lock-closed\",\n          size: 56,\n          color: \"#FF3B30\",\n          style: {\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            position: 'absolute',\n            top: 18,\n            right: 90,\n            backgroundColor: '#FF3B30',\n            borderRadius: 8,\n            width: 16,\n            height: 16,\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderWidth: 2,\n            borderColor: '#fff'\n          },\n          children: _jsxDEV(Text, {\n            style: {\n              color: '#fff',\n              fontSize: 12,\n              fontWeight: 'bold'\n            },\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.trainingFailedTitle,\n          children: \"Voice Training is Mandatory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.trainingFailedMessage,\n          children: \"Your safety matters. To activate emergency features, you must complete voice training.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.resumeButton,\n          onPress: () => setShowMandatoryModal(false),\n          children: [_jsxDEV(Ionicons, {\n            name: \"mic\",\n            size: 20,\n            color: \"#fff\",\n            style: {\n              marginRight: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.resumeButtonText,\n            children: \"Resume Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), trainingFailed && _jsxDEV(View, {\n      style: styles.trainingFailedOverlay,\n      children: _jsxDEV(View, {\n        style: styles.trainingFailedBox,\n        children: [_jsxDEV(Ionicons, {\n          name: \"warning\",\n          size: 48,\n          color: \"#FF3B30\",\n          style: {\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.trainingFailedTitle,\n          children: \"Training Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.trainingFailedMessage,\n          children: [\"We couldn't capture your voice properly.\", \"\\n\", \"Please find a quiet place and try again.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.retryButton,\n          onPress: handleRetry,\n          children: _jsxDEV(Text, {\n            style: styles.retryButtonText,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), showCompleteModal && _jsxDEV(View, {\n      style: styles.trainingFailedOverlay,\n      children: _jsxDEV(View, {\n        style: styles.trainingFailedBox,\n        children: [_jsxDEV(View, {\n          style: styles.checkmarkCircle,\n          children: _jsxDEV(Ionicons, {\n            name: \"checkmark\",\n            size: 36,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.trainingFailedTitle,\n          children: \"Voice Training Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.trainingFailedMessage,\n          children: \"You're all set. Your voice is now registered for emergency detection.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.continueAppButton,\n          onPress: () => {\n            setShowCompleteModal(false);\n            navigation.navigate('AddGuardian');\n          },\n          children: _jsxDEV(Text, {\n            style: styles.continueAppButtonText,\n            children: \"Continue to App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this), _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: () => navigation.goBack(),\n          children: _jsxDEV(Ionicons, {\n            name: \"arrow-back\",\n            size: 24,\n            color: \"#FF3B30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.logoContainer,\n          children: [_jsxDEV(SafeMitraLogo, {\n            color: \"#FF3B30\",\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.logoText,\n            children: \"SafeMitra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.headerRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.title,\n        children: \"Voice Training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.subtitle,\n        children: \"Record your voice saying 'Help Me' three times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.micButtonsContainer,\n        children: [0, 1, 2].map(renderMicButton)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.progressContainer,\n        children: [_jsxDEV(View, {\n          style: styles.progressBar,\n          children: _jsxDEV(View, {\n            style: [styles.progressFill, {\n              width: `${getProgress() / 3 * 100}%`\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.progressText,\n          children: [getProgress(), \"/3 completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.instructionBox,\n        children: [_jsxDEV(Ionicons, {\n          name: \"information-circle-outline\",\n          size: 24,\n          color: \"#666\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.instructionText,\n          children: \"Please record in a quiet place for best accuracy.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: [styles.continueButton, {\n          opacity: getProgress() === 3 ? 1 : 0.7\n        }],\n        disabled: getProgress() !== 3,\n        onPress: handleContinue,\n        children: _jsxDEV(_Fragment, {\n          children: [_jsxDEV(Text, {\n            style: styles.continueButtonText,\n            children: \"Save & Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), _jsxDEV(Ionicons, {\n            name: \"arrow-forward\",\n            size: 20,\n            color: \"#FFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\nexport default VoiceTrainingScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","ScrollView","SafeAreaView","Animated","Alert","Image","Ionicons","styles","SafeMitraLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","VoiceTrainingScreen","navigation","recordings","setRecordings","isRecording","setIsRecording","currentSample","setCurrentSample","isTrainingComplete","setIsTrainingComplete","trainingFailed","setTrainingFailed","pulseAnim","Value","showMandatoryModal","setShowMandatoryModal","showCompleteModal","setShowCompleteModal","unsubscribe","addListener","e","preventDefault","loop","sequence","timing","toValue","duration","useNativeDriver","start","setValue","handleStartRecording","index","setTimeout","handleStopRecording","newRecordings","completed","handleReRecord","getProgress","filter","r","length","handleContinue","handleTrainingFailed","handleRetry","renderMicButton","isComplete","isActive","style","sampleContainer","children","sampleText","fileName","_jsxFileName","lineNumber","columnNumber","micButtonContainer","transform","scale","micButton","micButtonComplete","onPress","disabled","name","size","color","container","trainingFailedOverlay","trainingFailedBox","marginBottom","position","top","right","backgroundColor","borderRadius","width","height","justifyContent","alignItems","borderWidth","borderColor","fontSize","fontWeight","trainingFailedTitle","trainingFailedMessage","resumeButton","marginRight","resumeButtonText","retryButton","retryButtonText","checkmarkCircle","continueAppButton","navigate","continueAppButtonText","contentContainerStyle","scrollContainer","header","backButton","goBack","logoContainer","logoText","headerRight","title","subtitle","micButtonsContainer","map","progressContainer","progressBar","progressFill","progressText","instructionBox","instructionText","continueButton","opacity","continueButtonText"],"sources":["C:/Users/PC/OneDrive/latest/SafeMitraLatest/screen/functional-part/VoiceTrainingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Animated,\r\n  Alert,\r\n  Image,\r\n  // ActivityIndicator, // Uncomment when implementing loading states\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { styles } from '../styles-part/VoiceTrainingScreenStyles';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\n\r\n// TODO: Import API service for voice training\r\n// import { voiceService } from '../../services/voiceService';\r\n\r\nconst VoiceTrainingScreen = ({ navigation }) => {\r\n  const [recordings, setRecordings] = useState([null, null, null]);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [currentSample, setCurrentSample] = useState(0);\r\n  const [isTrainingComplete, setIsTrainingComplete] = useState(false);\r\n  const [trainingFailed, setTrainingFailed] = useState(false);\r\n  const pulseAnim = new Animated.Value(1);\r\n  const [showMandatoryModal, setShowMandatoryModal] = useState(false);\r\n  const [showCompleteModal, setShowCompleteModal] = useState(false);\r\n  \r\n  // TODO: Add loading state for API calls\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // TODO: Add error state for API error handling\r\n  // const [error, setError] = useState(null);\r\n  \r\n  // TODO: Add state for voice data\r\n  // const [voiceData, setVoiceData] = useState({\r\n  //   samples: [],\r\n  //   isTrained: false\r\n  // });\r\n\r\n  // Prevent going back if training is not complete\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('beforeRemove', (e) => {\r\n      if (isTrainingComplete) {\r\n        return;\r\n      }\r\n      // Prevent default behavior of leaving the screen\r\n      e.preventDefault();\r\n      // Show custom modal instead of Alert\r\n      setShowMandatoryModal(true);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation, isTrainingComplete]);\r\n\r\n  // TODO: Add useEffect to check if voice training is already completed\r\n  // This will run when the component mounts to check if the user has already completed voice training\r\n  // If completed, it will navigate to the next screen\r\n  // useEffect(() => {\r\n  //   checkVoiceTrainingStatus();\r\n  // }, []);\r\n  \r\n  // TODO: Implement function to check voice training status\r\n  // This function will call the API to check if the user has already completed voice training\r\n  // If completed, it will navigate to the next screen\r\n  // const checkVoiceTrainingStatus = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     setError(null);\r\n  //     \r\n  //     // Call API to check if voice training is already completed\r\n  //     const response = await voiceService.getVoiceTrainingStatus();\r\n  //     \r\n  //     if (response.data.isTrained) {\r\n  //       // Voice training is already completed, navigate to next screen\r\n  //       navigation.replace('AddGuardian');\r\n  //     } else {\r\n  //       // Voice training is not completed, show training screen\r\n  //       setIsLoading(false);\r\n  //     }\r\n  //   } catch (err) {\r\n  //     setError('Failed to check voice training status. Please try again.');\r\n  //     console.error(err);\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (isRecording) {\r\n      Animated.loop(\r\n        Animated.sequence([\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 1.2,\r\n            duration: 1000,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 1,\r\n            duration: 1000,\r\n            useNativeDriver: true,\r\n          }),\r\n        ])\r\n      ).start();\r\n    } else {\r\n      pulseAnim.setValue(1);\r\n    }\r\n  }, [isRecording]);\r\n\r\n  // TODO: Update handleStartRecording to use actual recording functionality\r\n  // This function will be updated to use the actual recording functionality\r\n  // It will start recording the user's voice and set a timeout to stop recording after 3 seconds\r\n  const handleStartRecording = async (index) => {\r\n    setIsRecording(true);\r\n    setCurrentSample(index);\r\n    \r\n    // TODO: Implement actual recording logic here\r\n    // try {\r\n    //   // Start recording using voice service\r\n    //   await voiceService.startRecording();\r\n    //   \r\n    //   // Set a timeout to stop recording after 3 seconds\r\n    //   setTimeout(() => {\r\n    //     handleStopRecording(index);\r\n    //   }, 3000);\r\n    // } catch (err) {\r\n    //   setError('Failed to start recording. Please try again.');\r\n    //   Alert.alert('Error', 'Failed to start recording. Please try again.');\r\n    //   console.error(err);\r\n    //   setIsRecording(false);\r\n    // }\r\n    \r\n    // Temporary implementation for development\r\n    setTimeout(() => {\r\n      handleStopRecording(index);\r\n    }, 3000); // Simulate 3 second recording\r\n  };\r\n\r\n  // TODO: Update handleStopRecording to save the recording\r\n  // This function will be updated to save the recording data\r\n  // It will stop recording and save the recording data to the state\r\n  const handleStopRecording = async (index) => {\r\n    setIsRecording(false);\r\n    \r\n    // TODO: Implement actual recording stop and save logic\r\n    // try {\r\n    //   // Stop recording and get the recording data\r\n    //   const recordingData = await voiceService.stopRecording();\r\n    //   \r\n    //   // Update recordings state with the new recording\r\n    //   const newRecordings = [...recordings];\r\n    //   newRecordings[index] = { \r\n    //     completed: true,\r\n    //     data: recordingData\r\n    //   };\r\n    //   setRecordings(newRecordings);\r\n    // } catch (err) {\r\n    //   setError('Failed to save recording. Please try again.');\r\n    //   Alert.alert('Error', 'Failed to save recording. Please try again.');\r\n    //   console.error(err);\r\n    // }\r\n    \r\n    // Temporary implementation for development\r\n    const newRecordings = [...recordings];\r\n    newRecordings[index] = { completed: true };\r\n    setRecordings(newRecordings);\r\n  };\r\n\r\n  const handleReRecord = (index) => {\r\n    const newRecordings = [...recordings];\r\n    newRecordings[index] = null;\r\n    setRecordings(newRecordings);\r\n    setIsTrainingComplete(false);\r\n  };\r\n\r\n  const getProgress = () => {\r\n    return recordings.filter(r => r !== null).length;\r\n  };\r\n\r\n  // TODO: Update handleContinue to save voice training data to backend\r\n  // This function will be updated to save the voice training data to the backend\r\n  // It will prepare the voice data and call the API to save it\r\n  const handleContinue = async () => {\r\n    if (getProgress() === 3) {\r\n      // TODO: Implement API call to save voice training data\r\n      // try {\r\n      //   setIsLoading(true);\r\n      //   setError(null);\r\n      //   \r\n      //   // Prepare voice data for API\r\n      //   const voiceSamples = recordings.map(recording => recording.data);\r\n      //   \r\n      //   // Call API to save voice training data\r\n      //   await voiceService.saveVoiceTraining({\r\n      //     samples: voiceSamples\r\n      //   });\r\n      //   \r\n      //   // Update training status\r\n      //   setIsTrainingComplete(true);\r\n      //   \r\n      //   // Show success message\r\n      //   Alert.alert(\r\n      //     'Voice Training Complete',\r\n      //     'Great job! Your voice samples have been saved successfully.',\r\n      //     [\r\n      //       {\r\n      //         text: 'Continue',\r\n      //         onPress: () => navigation.navigate('AddGuardian')\r\n      //       }\r\n      //     ]\r\n      //   );\r\n      // } catch (err) {\r\n      //   setError('Failed to save voice training data. Please try again.');\r\n      //   Alert.alert('Error', 'Failed to save voice training data. Please try again.');\r\n      //   console.error(err);\r\n      // } finally {\r\n      //   setIsLoading(false);\r\n      // }\r\n      \r\n      // Temporary implementation for development\r\n      setIsTrainingComplete(true);\r\n      // Show completion modal instead of Alert\r\n      setShowCompleteModal(true);\r\n    }\r\n  };\r\n\r\n  // Call this function when training fails\r\n  const handleTrainingFailed = () => {\r\n    setTrainingFailed(true);\r\n  };\r\n\r\n  // Retry handler\r\n  const handleRetry = () => {\r\n    setTrainingFailed(false);\r\n    // Optionally reset other states if needed\r\n  };\r\n\r\n  // DEMO ONLY: Show training failed alert on mount. Remove this useEffect after testing.\r\n  useEffect(() => {\r\n    handleTrainingFailed();\r\n  }, []);\r\n\r\n  const renderMicButton = (index) => {\r\n    const isComplete = recordings[index]?.completed;\r\n    const isActive = currentSample === index && isRecording;\r\n\r\n    return (\r\n      <View style={styles.sampleContainer} key={index}>\r\n        <Text style={styles.sampleText}>Voice Sample {index + 1}</Text>\r\n        <Animated.View\r\n          style={[\r\n            styles.micButtonContainer,\r\n            isActive && { transform: [{ scale: pulseAnim }] }\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.micButton, isComplete && styles.micButtonComplete]}\r\n            onPress={() => !isRecording && handleStartRecording(index)}\r\n            disabled={isRecording} // TODO: Update to disable during API calls: disabled={isRecording || isLoading}\r\n          >\r\n            {isComplete ? (\r\n              <Ionicons name=\"checkmark\" size={24} color=\"#FFF\" />\r\n            ) : (\r\n              <Ionicons name=\"mic\" size={24} color=\"#FFF\" />\r\n            )}\r\n          </TouchableOpacity>\r\n        </Animated.View>\r\n        {/* Re-record option removed as per user request */}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Mandatory Training Modal - Remove or update as needed */}\r\n      {showMandatoryModal && (\r\n        <View style={styles.trainingFailedOverlay}>\r\n          <View style={styles.trainingFailedBox}>\r\n            {/* You can replace this with an Image if you have a lock icon asset */}\r\n            <Ionicons name=\"lock-closed\" size={56} color=\"#FF3B30\" style={{ marginBottom: 10 }} />\r\n            {/* Notification dot */}\r\n            <View style={{ position: 'absolute', top: 18, right: 90, backgroundColor: '#FF3B30', borderRadius: 8, width: 16, height: 16, justifyContent: 'center', alignItems: 'center', borderWidth: 2, borderColor: '#fff' }}>\r\n              <Text style={{ color: '#fff', fontSize: 12, fontWeight: 'bold' }}>!</Text>\r\n            </View>\r\n            <Text style={styles.trainingFailedTitle}>Voice Training is Mandatory</Text>\r\n            <Text style={styles.trainingFailedMessage}>\r\n              Your safety matters. To activate emergency features, you must complete voice training.\r\n            </Text>\r\n            <TouchableOpacity style={styles.resumeButton} onPress={() => setShowMandatoryModal(false)}>\r\n              <Ionicons name=\"mic\" size={20} color=\"#fff\" style={{ marginRight: 8 }} />\r\n              <Text style={styles.resumeButtonText}>Resume Training</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )}\r\n      {/* Training Failed Alert Modal */}\r\n      {trainingFailed && (\r\n        <View style={styles.trainingFailedOverlay}>\r\n          <View style={styles.trainingFailedBox}>\r\n            <Ionicons name=\"warning\" size={48} color=\"#FF3B30\" style={{ marginBottom: 10 }} />\r\n            <Text style={styles.trainingFailedTitle}>Training Failed</Text>\r\n            <Text style={styles.trainingFailedMessage}>\r\n              We couldn't capture your voice properly.{\"\\n\"}Please find a quiet place and try again.\r\n            </Text>\r\n            <TouchableOpacity style={styles.retryButton} onPress={handleRetry}>\r\n              <Text style={styles.retryButtonText}>Retry</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )}\r\n      {/* Training Complete Modal - Remove or update as needed */}\r\n      {showCompleteModal && (\r\n        <View style={styles.trainingFailedOverlay}>\r\n          <View style={styles.trainingFailedBox}>\r\n            {/* Gradient checkmark icon */}\r\n            <View style={styles.checkmarkCircle}>\r\n              <Ionicons name=\"checkmark\" size={36} color=\"#fff\" />\r\n            </View>\r\n            <Text style={styles.trainingFailedTitle}>Voice Training Completed</Text>\r\n            <Text style={styles.trainingFailedMessage}>\r\n              You're all set. Your voice is now registered for emergency detection.\r\n            </Text>\r\n            <TouchableOpacity style={styles.continueAppButton} onPress={() => {\r\n              setShowCompleteModal(false);\r\n              navigation.navigate('AddGuardian');\r\n            }}>\r\n              <Text style={styles.continueAppButtonText}>Continue to App</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )}\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.header}>\r\n          <TouchableOpacity\r\n            style={styles.backButton}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n          </TouchableOpacity>\r\n          <View style={styles.logoContainer}>\r\n            <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n            <Text style={styles.logoText}>SafeMitra</Text>\r\n          </View>\r\n          <View style={styles.headerRight} />\r\n        </View>\r\n\r\n        {/* TODO: Add error message display */}\r\n        {/* This will display any error messages from API calls */}\r\n        {/* {error && <Text style={styles.errorText}>{error}</Text> */}\r\n        \r\n        {/* TODO: Add loading indicator */}\r\n        {/* This will display a loading indicator during API calls */}\r\n        {/* {isLoading && (\r\n          <View style={styles.loadingContainer}>\r\n            <ActivityIndicator size=\"large\" color=\"#FF3B30\" />\r\n            <Text style={styles.loadingText}>Loading...</Text>\r\n          </View>\r\n        )} */}\r\n\r\n        <Text style={styles.title}>Voice Training</Text>\r\n        <Text style={styles.subtitle}>\r\n          Record your voice saying 'Help Me' three times\r\n        </Text>\r\n\r\n        <View style={styles.micButtonsContainer}>\r\n          {[0, 1, 2].map(renderMicButton)}\r\n        </View>\r\n\r\n        <View style={styles.progressContainer}>\r\n          <View style={styles.progressBar}>\r\n            <View\r\n              style={[\r\n                styles.progressFill,\r\n                { width: `${(getProgress() / 3) * 100}%` },\r\n              ]}\r\n            />\r\n          </View>\r\n          <Text style={styles.progressText}>\r\n            {getProgress()}/3 completed\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.instructionBox}>\r\n          <Ionicons name=\"information-circle-outline\" size={24} color=\"#666\" />\r\n          <Text style={styles.instructionText}>\r\n            Please record in a quiet place for best accuracy.\r\n          </Text>\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.continueButton,\r\n            { opacity: getProgress() === 3 ? 1 : 0.7 },\r\n          ]}\r\n          disabled={getProgress() !== 3} // TODO: Update to disable during API calls: disabled={getProgress() !== 3 || isLoading}\r\n          onPress={handleContinue}\r\n        >\r\n          {/* TODO: Show loading indicator during API calls */}\r\n          {/* {isLoading ? (\r\n            <ActivityIndicator color=\"#FFFFFF\" size=\"small\" />\r\n          ) : ( */}\r\n            <>\r\n              <Text style={styles.continueButtonText}>Save & Continue</Text>\r\n              <Ionicons name=\"arrow-forward\" size={20} color=\"#FFF\" />\r\n            </>\r\n          {/* )} */}\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default VoiceTrainingScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}