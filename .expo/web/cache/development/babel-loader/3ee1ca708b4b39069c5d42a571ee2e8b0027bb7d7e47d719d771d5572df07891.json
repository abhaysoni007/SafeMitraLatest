{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport NativeInterface from './nativeInterface';\nimport InternetReachability from './internetReachability';\nimport * as PrivateTypes from './privateTypes';\nexport default class State {\n  constructor(configuration) {\n    _defineProperty(this, \"_nativeEventSubscription\", null);\n    _defineProperty(this, \"_subscriptions\", new Set());\n    _defineProperty(this, \"_latestState\", null);\n    _defineProperty(this, \"_internetReachability\", void 0);\n    _defineProperty(this, \"_handleNativeStateUpdate\", state => {\n      this._internetReachability.update(state);\n      const convertedState = this._convertState(state);\n      this._latestState = convertedState;\n      this._subscriptions.forEach(handler => handler(convertedState));\n    });\n    _defineProperty(this, \"_handleInternetReachabilityUpdate\", isInternetReachable => {\n      if (!this._latestState) {\n        return;\n      }\n      const nextState = Object.assign({}, this._latestState, {\n        isInternetReachable\n      });\n      this._latestState = nextState;\n      this._subscriptions.forEach(handler => handler(nextState));\n    });\n    _defineProperty(this, \"_fetchCurrentState\", async requestedInterface => {\n      const state = await NativeInterface.getCurrentState(requestedInterface);\n      this._internetReachability.update(state);\n      const convertedState = this._convertState(state);\n      if (!requestedInterface) {\n        this._latestState = convertedState;\n        this._subscriptions.forEach(handler => handler(convertedState));\n      }\n      return convertedState;\n    });\n    _defineProperty(this, \"_convertState\", input => {\n      if (typeof input.isInternetReachable === 'boolean') {\n        return input;\n      } else {\n        return Object.assign({}, input, {\n          isInternetReachable: this._internetReachability.currentState()\n        });\n      }\n    });\n    _defineProperty(this, \"latest\", requestedInterface => {\n      if (requestedInterface) {\n        return this._fetchCurrentState(requestedInterface);\n      } else if (this._latestState) {\n        return Promise.resolve(this._latestState);\n      } else {\n        return this._fetchCurrentState();\n      }\n    });\n    _defineProperty(this, \"add\", handler => {\n      this._subscriptions.add(handler);\n      if (this._latestState) {\n        handler(this._latestState);\n      } else {\n        this.latest().then(handler);\n      }\n    });\n    _defineProperty(this, \"remove\", handler => {\n      this._subscriptions.delete(handler);\n    });\n    _defineProperty(this, \"tearDown\", () => {\n      if (this._internetReachability) {\n        this._internetReachability.tearDown();\n      }\n      if (this._nativeEventSubscription) {\n        this._nativeEventSubscription.remove();\n      }\n      this._subscriptions.clear();\n    });\n    this._internetReachability = new InternetReachability(configuration, this._handleInternetReachabilityUpdate);\n    this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(PrivateTypes.DEVICE_CONNECTIVITY_EVENT, this._handleNativeStateUpdate);\n    this._fetchCurrentState();\n  }\n}","map":{"version":3,"names":["NativeInterface","InternetReachability","PrivateTypes","State","constructor","configuration","_defineProperty","Set","state","_internetReachability","update","convertedState","_convertState","_latestState","_subscriptions","forEach","handler","isInternetReachable","nextState","Object","assign","requestedInterface","getCurrentState","input","currentState","_fetchCurrentState","Promise","resolve","add","latest","then","delete","tearDown","_nativeEventSubscription","remove","clear","_handleInternetReachabilityUpdate","eventEmitter","addListener","DEVICE_CONNECTIVITY_EVENT","_handleNativeStateUpdate"],"sources":["C:\\Users\\PC\\OneDrive\\latest\\SafeMitraLatest\\node_modules\\@react-native-community\\netinfo\\lib\\module\\internal\\state.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport {NativeEventSubscription} from 'react-native';\nimport NativeInterface from './nativeInterface';\nimport InternetReachability from './internetReachability';\nimport * as Types from './types';\nimport * as PrivateTypes from './privateTypes';\n\nexport default class State {\n  private _nativeEventSubscription: NativeEventSubscription | null = null;\n  private _subscriptions = new Set<Types.NetInfoChangeHandler>();\n  private _latestState: Types.NetInfoState | null = null;\n  private _internetReachability: InternetReachability;\n\n  constructor(configuration: Types.NetInfoConfiguration) {\n    // Add the listener to the internet connectivity events\n    this._internetReachability = new InternetReachability(\n      configuration,\n      this._handleInternetReachabilityUpdate,\n    );\n\n    // Add the subscription to the native events\n    this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(\n      PrivateTypes.DEVICE_CONNECTIVITY_EVENT,\n      this._handleNativeStateUpdate,\n    );\n\n    // Fetch the current state from the native module\n    this._fetchCurrentState();\n  }\n\n  private _handleNativeStateUpdate = (\n    state: PrivateTypes.NetInfoNativeModuleState,\n  ): void => {\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n\n    // Convert the state from native to JS shape\n    const convertedState = this._convertState(state);\n\n    // Update the listeners\n    this._latestState = convertedState;\n    this._subscriptions.forEach((handler): void => handler(convertedState));\n  };\n\n  private _handleInternetReachabilityUpdate = (\n    isInternetReachable: boolean | null | undefined,\n  ): void => {\n    if (!this._latestState) {\n      return;\n    }\n\n    const nextState = {\n      ...this._latestState,\n      isInternetReachable,\n    } as Types.NetInfoState;\n    this._latestState = nextState;\n    this._subscriptions.forEach((handler): void => handler(nextState));\n  };\n\n  public _fetchCurrentState = async (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    const state = await NativeInterface.getCurrentState(requestedInterface);\n\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n    // Convert and store the new state\n    const convertedState = this._convertState(state);\n    if (!requestedInterface) {\n      this._latestState = convertedState;\n      this._subscriptions.forEach((handler): void => handler(convertedState));\n    }\n\n    return convertedState;\n  };\n\n  private _convertState = (\n    input: PrivateTypes.NetInfoNativeModuleState,\n  ): Types.NetInfoState => {\n    if (typeof input.isInternetReachable === 'boolean') {\n      return input as Types.NetInfoState;\n    } else {\n      return {\n        ...input,\n        isInternetReachable: this._internetReachability.currentState(),\n      } as Types.NetInfoState;\n    }\n  };\n\n  public latest = (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    if (requestedInterface) {\n      return this._fetchCurrentState(requestedInterface);\n    } else if (this._latestState) {\n      return Promise.resolve(this._latestState);\n    } else {\n      return this._fetchCurrentState();\n    }\n  };\n\n  public add = (handler: Types.NetInfoChangeHandler): void => {\n    // Add the subscription handler to our set\n    this._subscriptions.add(handler);\n\n    // Send it the latest data we have\n    if (this._latestState) {\n      handler(this._latestState);\n    } else {\n      this.latest().then(handler);\n    }\n  };\n\n  public remove = (handler: Types.NetInfoChangeHandler): void => {\n    this._subscriptions.delete(handler);\n  };\n\n  public tearDown = (): void => {\n    if (this._internetReachability) {\n      this._internetReachability.tearDown();\n    }\n\n    if (this._nativeEventSubscription) {\n      this._nativeEventSubscription.remove();\n    }\n\n    this._subscriptions.clear();\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}