{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\latest\\\\SafeMitraLatest\\\\screen\\\\functional-part\\\\HotwordDetectionScreen.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { Audio } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport NetInfo from '@react-native-community/netinfo';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport styles from '../styles-part/HotwordDetectionScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HOTWORDS = ['sos', 'help', 'bachaao'];\nconst COOLDOWN_PERIOD = 15000;\nconst HotwordDetectionScreen = () => {\n  const navigation = useNavigation();\n  const [isListening, setIsListening] = useState(false);\n  const [recording, setRecording] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOnline, setIsOnline] = useState(true);\n  const [pendingRecordings, setPendingRecordings] = useState([]);\n  const recordingRef = useRef(null);\n  const isRecordingRef = useRef(false);\n  const processingRef = useRef(false);\n  const lastTriggeredRef = useRef(0);\n  const debounceTimeoutRef = useRef(null);\n  useEffect(() => {\n    const checkConnectivity = async () => {\n      try {\n        const netInfo = await NetInfo.fetch();\n        setIsOnline(Boolean(netInfo.isConnected));\n        console.log('Network status:', netInfo.isConnected ? 'Online' : 'Offline');\n      } catch (error) {\n        console.log('Network check failed:', error);\n        setIsOnline(false);\n      }\n    };\n    checkConnectivity();\n    const unsubscribe = NetInfo.addEventListener(state => {\n      setIsOnline(Boolean(state.isConnected));\n      console.log('Network status changed:', state.isConnected ? 'Online' : 'Offline');\n    });\n    return () => {\n      unsubscribe();\n      stopRecording();\n      Audio.setAudioModeAsync({\n        allowsRecordingIOS: false,\n        playsInSilentModeIOS: false\n      });\n      if (debounceTimeoutRef.current) {\n        clearTimeout(debounceTimeoutRef.current);\n      }\n    };\n  }, [pendingRecordings]);\n  const handleSOSStatus = isActive => {\n    const now = Date.now();\n    if (isActive && now - lastTriggeredRef.current < COOLDOWN_PERIOD) {\n      console.log('SOS trigger on cooldown');\n      return;\n    }\n    lastTriggeredRef.current = now;\n    if (isActive) {\n      console.log('ðŸš¨ SOS TRIGGERED SUCCESSFULLY!');\n      navigation.navigate('AutoAlertActive');\n    } else {\n      console.log('SOS Status: Deactivated');\n    }\n  };\n  async function startRecording() {\n    try {\n      if (isRecordingRef.current || processingRef.current) {\n        console.log('Recording or processing already in progress');\n        return;\n      }\n      if (!isOnline) {\n        console.log('No Internet Connection. Recording will be stored and processed when online.');\n      }\n      setIsLoading(true);\n      const {\n        status\n      } = await Audio.requestPermissionsAsync();\n      if (status !== 'granted') {\n        console.log('Microphone permission not granted');\n        return;\n      }\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true,\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n        playThroughEarpieceAndroid: false\n      });\n      const {\n        recording\n      } = await Audio.Recording.createAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY);\n      recordingRef.current = recording;\n      setRecording(recording);\n      setIsListening(true);\n      isRecordingRef.current = true;\n      console.log('Recording started');\n      setTimeout(async () => {\n        if (isRecordingRef.current) {\n          await processRecording();\n        }\n      }, 5000);\n    } catch (err) {\n      console.error('Failed to start recording:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  async function stopRecording() {\n    try {\n      setIsLoading(true);\n      isRecordingRef.current = false;\n      processingRef.current = false;\n      if (recordingRef.current) {\n        await recordingRef.current.stopAndUnloadAsync();\n        recordingRef.current = null;\n      }\n      if (recording) {\n        await recording.stopAndUnloadAsync();\n      }\n      handleSOSStatus(false);\n    } catch (err) {\n      console.error('Error stopping recording:', err);\n    } finally {\n      setIsLoading(false);\n      setRecording(null);\n      setIsListening(false);\n    }\n  }\n  async function processRecording(uri = null) {\n    if (processingRef.current) {\n      console.log('Already processing a recording');\n      return;\n    }\n    try {\n      processingRef.current = true;\n      if (!recordingRef.current && !uri) {\n        processingRef.current = false;\n        return;\n      }\n      const recordingUri = uri || recordingRef.current.getURI();\n      console.log('Processing recording from:', recordingUri);\n      if (!isOnline) {\n        const pendingPath = `${FileSystem.documentDirectory}pending_recording_${Date.now()}.m4a`;\n        await FileSystem.copyAsync({\n          from: recordingUri,\n          to: pendingPath\n        });\n        setPendingRecordings(prev => [...prev, {\n          uri: pendingPath,\n          timestamp: Date.now()\n        }]);\n        console.log('Recording saved for later processing:', pendingPath);\n        processingRef.current = false;\n        return;\n      }\n      if (recordingRef.current) {\n        await recordingRef.current.stopAndUnloadAsync();\n        isRecordingRef.current = false;\n      }\n      const mockTranscript = 'This is a simulated transcript. Say \"help\" or \"sos\" to test.';\n      setTranscript(mockTranscript);\n      console.log('Transcript:', mockTranscript);\n      const matched = HOTWORDS.find(word => mockTranscript.toLowerCase().includes(word));\n      if (matched) {\n        console.log('ðŸš¨ SOS Triggered: Hotword Detected â†’', matched);\n        handleSOSStatus(true);\n      }\n      if (!isRecordingRef.current) {\n        startRecording();\n      }\n    } catch (err) {\n      console.error('Error processing recording:', err);\n    } finally {\n      processingRef.current = false;\n    }\n  }\n  const toggleHotwordDetection = async () => {\n    if (debounceTimeoutRef.current) return;\n    debounceTimeoutRef.current = setTimeout(() => {\n      debounceTimeoutRef.current = null;\n    }, 2000);\n    if (isListening) {\n      await stopRecording();\n    } else {\n      await startRecording();\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#FF3B30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.logoContainer,\n        children: [_jsxDEV(SafeMitraLogo, {\n          color: \"#FF3B30\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.logoText,\n          children: \"SafeMitra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.content,\n      children: [isLoading && _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#FF3B30\",\n        style: styles.loadingIndicator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }, this), _jsxDEV(View, {\n        style: styles.hotwordCard,\n        children: [_jsxDEV(View, {\n          style: styles.statusIndicator,\n          children: [_jsxDEV(View, {\n            style: [styles.statusDot, {\n              backgroundColor: isListening ? '#4CAF50' : '#FF3B30'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statusText,\n            children: isListening ? 'Status: Listening' : 'Status: Paused'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.toggleButton,\n            onPress: toggleHotwordDetection,\n            disabled: isLoading || Boolean(debounceTimeoutRef.current),\n            children: _jsxDEV(Text, {\n              style: styles.toggleButtonText,\n              children: isListening ? 'Stop Recording' : 'Start Recording'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.mainContent,\n          children: [_jsxDEV(View, {\n            style: styles.iconContainer,\n            children: [_jsxDEV(Ionicons, {\n              name: \"mic\",\n              size: 40,\n              color: \"#FF3B30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.waveformContainer,\n              children: [_jsxDEV(View, {\n                style: [styles.waveform, styles.waveform1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: [styles.waveform, styles.waveform2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: [styles.waveform, styles.waveform3]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.title,\n            children: \"Voice Hotword Detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.description,\n            children: \"SafeMitra is listening for emergency keywords: \\\"SOS\\\", \\\"Help\\\", \\\"Bachaao\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), !isOnline && _jsxDEV(Text, {\n            style: [styles.description, {\n              color: '#FF3B30'\n            }],\n            children: \"No internet connection. Recordings will be processed when online.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), pendingRecordings.length > 0 && _jsxDEV(Text, {\n            style: [styles.description, {\n              color: '#FFA500'\n            }],\n            children: [pendingRecordings.length, \" recording(s) waiting to be processed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), transcript ? _jsxDEV(View, {\n            style: styles.transcriptContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.transcriptLabel,\n              children: \"Last Transcript:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              numberOfLines: 3,\n              ellipsizeMode: \"tail\",\n              style: styles.transcriptText,\n              children: transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\nexport default HotwordDetectionScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","TouchableOpacity","SafeAreaView","Text","ActivityIndicator","Platform","Ionicons","useNavigation","Audio","FileSystem","NetInfo","SafeMitraLogo","styles","jsxDEV","_jsxDEV","HOTWORDS","COOLDOWN_PERIOD","HotwordDetectionScreen","navigation","isListening","setIsListening","recording","setRecording","transcript","setTranscript","isLoading","setIsLoading","isOnline","setIsOnline","pendingRecordings","setPendingRecordings","recordingRef","isRecordingRef","processingRef","lastTriggeredRef","debounceTimeoutRef","checkConnectivity","netInfo","fetch","Boolean","isConnected","console","log","error","unsubscribe","addEventListener","state","stopRecording","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","current","clearTimeout","handleSOSStatus","isActive","now","Date","navigate","startRecording","status","requestPermissionsAsync","staysActiveInBackground","shouldDuckAndroid","playThroughEarpieceAndroid","Recording","createAsync","RecordingOptionsPresets","HIGH_QUALITY","setTimeout","processRecording","err","stopAndUnloadAsync","uri","recordingUri","getURI","pendingPath","documentDirectory","copyAsync","from","to","prev","timestamp","mockTranscript","matched","find","word","toLowerCase","includes","toggleHotwordDetection","style","container","children","header","backButton","onPress","goBack","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","logoContainer","logoText","content","loadingIndicator","hotwordCard","statusIndicator","statusDot","backgroundColor","statusText","toggleButton","disabled","toggleButtonText","mainContent","iconContainer","waveformContainer","waveform","waveform1","waveform2","waveform3","title","description","length","transcriptContainer","transcriptLabel","numberOfLines","ellipsizeMode","transcriptText"],"sources":["C:/Users/PC/OneDrive/latest/SafeMitraLatest/screen/functional-part/HotwordDetectionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  Text,\r\n  ActivityIndicator,\r\n  Platform\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Audio } from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport NetInfo from '@react-native-community/netinfo';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\nimport styles from '../styles-part/HotwordDetectionScreenStyles';\r\n\r\nconst HOTWORDS = ['sos', 'help', 'bachaao'];\r\nconst COOLDOWN_PERIOD = 15000; // 15 seconds\r\nconst HotwordDetectionScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recording, setRecording] = useState(null);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [pendingRecordings, setPendingRecordings] = useState([]);\r\n\r\n  const recordingRef = useRef(null);\r\n  const isRecordingRef = useRef(false);\r\n  const processingRef = useRef(false);\r\n  const lastTriggeredRef = useRef(0);\r\n  const debounceTimeoutRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const checkConnectivity = async () => {\r\n      try {\r\n        const netInfo = await NetInfo.fetch();\r\n        setIsOnline(Boolean(netInfo.isConnected));\r\n        console.log('Network status:', netInfo.isConnected ? 'Online' : 'Offline');\r\n      } catch (error) {\r\n        console.log('Network check failed:', error);\r\n        setIsOnline(false);\r\n      }\r\n    };\r\n\r\n    checkConnectivity();\r\n    const unsubscribe = NetInfo.addEventListener(state => {\r\n      setIsOnline(Boolean(state.isConnected));\r\n      console.log('Network status changed:', state.isConnected ? 'Online' : 'Offline');\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      stopRecording();\r\n      Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: false,\r\n        playsInSilentModeIOS: false\r\n      });\r\n      if (debounceTimeoutRef.current) {\r\n        clearTimeout(debounceTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [pendingRecordings]);\r\n\r\n  const handleSOSStatus = (isActive) => {\r\n    const now = Date.now();\r\n    if (isActive && now - lastTriggeredRef.current < COOLDOWN_PERIOD) {\r\n      console.log('SOS trigger on cooldown');\r\n      return;\r\n    }\r\n\r\n    lastTriggeredRef.current = now;\r\n\r\n    if (isActive) {\r\n      console.log('ðŸš¨ SOS TRIGGERED SUCCESSFULLY!');\r\n      navigation.navigate('AutoAlertActive');\r\n    } else {\r\n      console.log('SOS Status: Deactivated');\r\n    }\r\n  };\r\n\r\n  async function startRecording() {\r\n    try {\r\n      if (isRecordingRef.current || processingRef.current) {\r\n        console.log('Recording or processing already in progress');\r\n        return;\r\n      }\r\n\r\n      if (!isOnline) {\r\n        console.log('No Internet Connection. Recording will be stored and processed when online.');\r\n      }\r\n\r\n      setIsLoading(true);\r\n      const { status } = await Audio.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        console.log('Microphone permission not granted');\r\n        return;\r\n      }\r\n\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n        staysActiveInBackground: true,\r\n        shouldDuckAndroid: true,\r\n        playThroughEarpieceAndroid: false\r\n      });\r\n\r\n      const { recording } = await Audio.Recording.createAsync(\r\n        Audio.RecordingOptionsPresets.HIGH_QUALITY\r\n      );\r\n\r\n      recordingRef.current = recording;\r\n      setRecording(recording);\r\n      setIsListening(true);\r\n      isRecordingRef.current = true;\r\n      console.log('Recording started');\r\n\r\n      setTimeout(async () => {\r\n        if (isRecordingRef.current) {\r\n          await processRecording();\r\n        }\r\n      }, 5000);\r\n\r\n    } catch (err) {\r\n      console.error('Failed to start recording:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function stopRecording() {\r\n    try {\r\n      setIsLoading(true);\r\n      isRecordingRef.current = false;\r\n      processingRef.current = false;\r\n\r\n      if (recordingRef.current) {\r\n        await recordingRef.current.stopAndUnloadAsync();\r\n        recordingRef.current = null;\r\n      }\r\n      if (recording) {\r\n        await recording.stopAndUnloadAsync();\r\n      }\r\n\r\n      handleSOSStatus(false);\r\n    } catch (err) {\r\n      console.error('Error stopping recording:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setRecording(null);\r\n      setIsListening(false);\r\n    }\r\n  }\r\n\r\n  async function processRecording(uri = null) {\r\n    if (processingRef.current) {\r\n      console.log('Already processing a recording');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      processingRef.current = true;\r\n\r\n      if (!recordingRef.current && !uri) {\r\n        processingRef.current = false;\r\n        return;\r\n      }\r\n\r\n      const recordingUri = uri || recordingRef.current.getURI();\r\n      console.log('Processing recording from:', recordingUri);\r\n\r\n      if (!isOnline) {\r\n        const pendingPath = `${FileSystem.documentDirectory}pending_recording_${Date.now()}.m4a`;\r\n        await FileSystem.copyAsync({ from: recordingUri, to: pendingPath });\r\n        setPendingRecordings(prev => [...prev, { uri: pendingPath, timestamp: Date.now() }]);\r\n        console.log('Recording saved for later processing:', pendingPath);\r\n        processingRef.current = false;\r\n        return;\r\n      }\r\n\r\n      if (recordingRef.current) {\r\n        await recordingRef.current.stopAndUnloadAsync();\r\n        isRecordingRef.current = false;\r\n      }\r\n\r\n      const mockTranscript = 'This is a simulated transcript. Say \"help\" or \"sos\" to test.';\r\n      setTranscript(mockTranscript);\r\n      console.log('Transcript:', mockTranscript);\r\n\r\n      const matched = HOTWORDS.find(word =>\r\n        mockTranscript.toLowerCase().includes(word)\r\n      );\r\n\r\n      if (matched) {\r\n        console.log('ðŸš¨ SOS Triggered: Hotword Detected â†’', matched);\r\n        handleSOSStatus(true);\r\n      }\r\n\r\n      if (!isRecordingRef.current) {\r\n        startRecording();\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error processing recording:', err);\r\n    } finally {\r\n      processingRef.current = false;\r\n    }\r\n  }\r\n\r\n  const toggleHotwordDetection = async () => {\r\n    if (debounceTimeoutRef.current) return;\r\n\r\n    debounceTimeoutRef.current = setTimeout(() => {\r\n      debounceTimeoutRef.current = null;\r\n    }, 2000);\r\n\r\n    if (isListening) {\r\n      await stopRecording();\r\n    } else {\r\n      await startRecording();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity\r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.logoContainer}>\r\n          <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n          <Text style={styles.logoText}>SafeMitra</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.content}>\r\n        {isLoading && <ActivityIndicator size=\"large\" color=\"#FF3B30\" style={styles.loadingIndicator} />}\r\n\r\n        <View style={styles.hotwordCard}>\r\n          <View style={styles.statusIndicator}>\r\n            <View style={[\r\n              styles.statusDot,\r\n              { backgroundColor: isListening ? '#4CAF50' : '#FF3B30' }\r\n            ]} />\r\n            <Text style={styles.statusText}>\r\n              {isListening ? 'Status: Listening' : 'Status: Paused'}\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={styles.toggleButton}\r\n              onPress={toggleHotwordDetection}\r\n              disabled={isLoading || Boolean(debounceTimeoutRef.current)}\r\n            >\r\n              <Text style={styles.toggleButtonText}>\r\n                {isListening ? 'Stop Recording' : 'Start Recording'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.mainContent}>\r\n            <View style={styles.iconContainer}>\r\n              <Ionicons name=\"mic\" size={40} color=\"#FF3B30\" />\r\n              <View style={styles.waveformContainer}>\r\n                <View style={[styles.waveform, styles.waveform1]} />\r\n                <View style={[styles.waveform, styles.waveform2]} />\r\n                <View style={[styles.waveform, styles.waveform3]} />\r\n              </View>\r\n            </View>\r\n\r\n            <Text style={styles.title}>Voice Hotword Detection</Text>\r\n            <Text style={styles.description}>\r\n              SafeMitra is listening for emergency keywords: \"SOS\", \"Help\", \"Bachaao\"\r\n            </Text>\r\n\r\n            {!isOnline && (\r\n              <Text style={[styles.description, { color: '#FF3B30' }]}>\r\n                No internet connection. Recordings will be processed when online.\r\n              </Text>\r\n            )}\r\n\r\n            {pendingRecordings.length > 0 && (\r\n              <Text style={[styles.description, { color: '#FFA500' }]}>\r\n                {pendingRecordings.length} recording(s) waiting to be processed\r\n              </Text>\r\n            )}\r\n\r\n            {transcript ? (\r\n              <View style={styles.transcriptContainer}>\r\n                <Text style={styles.transcriptLabel}>Last Transcript:</Text>\r\n                <Text\r\n                  numberOfLines={3}\r\n                  ellipsizeMode=\"tail\"\r\n                  style={styles.transcriptText}\r\n                >\r\n                  {transcript}\r\n                </Text>\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default HotwordDetectionScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}