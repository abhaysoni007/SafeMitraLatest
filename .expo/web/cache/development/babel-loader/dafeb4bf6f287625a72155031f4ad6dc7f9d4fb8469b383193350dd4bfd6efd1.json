{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\dimag-kharaab-backup\\\\SafeMitra\\\\SafeMitra-app\\\\screen\\\\functional-part\\\\EmergencySOSScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\nimport styles from '../styles-part/EmergencySOSScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergencySOSScreen = () => {\n  const navigation = useNavigation();\n  const [isAlertActive, setIsAlertActive] = useState(true);\n  const [sosDuration, setSosDuration] = useState(0);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setSosDuration(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: () => navigation.goBack(),\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#FF3B30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.logoContainer,\n        children: [_jsxDEV(SafeMitraLogo, {\n          color: \"#FF3B30\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.logoText,\n          children: \"SafeMitra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: _jsxDEV(View, {\n        style: styles.content,\n        children: [_jsxDEV(View, {\n          style: styles.titleSection,\n          children: [_jsxDEV(Text, {\n            style: styles.title,\n            children: \"Emergency SOS Activated!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.subtitle,\n            children: \"Your emergency SOS has been activated. Help is on the way.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.timerContainer,\n          children: [_jsxDEV(Ionicons, {\n            name: \"time\",\n            size: 24,\n            color: \"#FF3B30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.timerText,\n            children: [\"SOS Active: \", formatTime(sosDuration)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.mapContainer,\n          children: _jsxDEV(View, {\n            style: styles.mapPlaceholder,\n            children: [_jsxDEV(Ionicons, {\n              name: \"map\",\n              size: 40,\n              color: \"#CCCCCC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.mapPlaceholderText,\n              children: \"Live Location Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.mapPlaceholderSubtext,\n              children: \"Map integration coming soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.actionButtons,\n          children: [_jsxDEV(TouchableOpacity, {\n            style: styles.actionButton,\n            onPress: () => {},\n            children: [_jsxDEV(Ionicons, {\n              name: \"location\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.actionButtonText,\n              children: \"Send Live Location to Guardians\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: [styles.actionButton, styles.emergencyButton],\n            onPress: () => {},\n            children: [_jsxDEV(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.actionButtonText,\n              children: \"Call Police & NGO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: [styles.actionButton, styles.blockchainButton],\n            onPress: () => {},\n            children: [_jsxDEV(Ionicons, {\n              name: \"lock-closed\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.actionButtonText,\n              children: \"Save Voice & Location to Blockchain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.guardianAlert,\n          children: [_jsxDEV(View, {\n            style: styles.alertHeader,\n            children: [_jsxDEV(Ionicons, {\n              name: \"notifications\",\n              size: 24,\n              color: \"#FF3B30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.alertTitle,\n              children: \"Guardians have been notified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.alertStatus,\n            children: [_jsxDEV(Ionicons, {\n              name: \"notifications\",\n              size: 20,\n              color: isAlertActive ? '#4CAF50' : '#FF3B30'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.alertStatusText,\n              children: isAlertActive ? 'Alert Active' : 'Alert Stopped'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.stopAlertButton,\n            onPress: () => {},\n            children: _jsxDEV(Text, {\n              style: styles.stopAlertButtonText,\n              children: \"Stop Alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\nexport default EmergencySOSScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","SafeAreaView","Text","ScrollView","ActivityIndicator","Alert","Ionicons","useNavigation","SafeMitraLogo","styles","jsxDEV","_jsxDEV","EmergencySOSScreen","navigation","isAlertActive","setIsAlertActive","sosDuration","setSosDuration","timer","setInterval","prev","clearInterval","formatTime","seconds","mins","Math","floor","secs","toString","padStart","style","container","children","header","backButton","onPress","goBack","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","logoContainer","logoText","contentContainerStyle","scrollContent","content","titleSection","title","subtitle","timerContainer","timerText","mapContainer","mapPlaceholder","mapPlaceholderText","mapPlaceholderSubtext","actionButtons","actionButton","actionButtonText","emergencyButton","blockchainButton","guardianAlert","alertHeader","alertTitle","alertStatus","alertStatusText","stopAlertButton","stopAlertButtonText"],"sources":["C:/Users/PC/OneDrive/dimag-kharaab-backup/SafeMitra/SafeMitra-app/screen/functional-part/EmergencySOSScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  View, \r\n  TouchableOpacity, \r\n  SafeAreaView, \r\n  Text, \r\n  ScrollView,\r\n  ActivityIndicator,\r\n  Alert\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport SafeMitraLogo from '../../components/SafeMitraLogo';\r\nimport styles from '../styles-part/EmergencySOSScreenStyles';\r\n\r\n// TODO: Import API service for emergency operations\r\n// import { emergencyService } from '../../services/emergencyService';\r\n\r\nconst EmergencySOSScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [isAlertActive, setIsAlertActive] = useState(true);\r\n  const [sosDuration, setSosDuration] = useState(0);\r\n  \r\n  // TODO: Add loading state for API calls\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // TODO: Add error state for API error handling\r\n  // const [error, setError] = useState(null);\r\n  \r\n  // TODO: Add state for tracking emergency actions\r\n  // This state will track the status of various emergency actions taken during an SOS event\r\n  // It will be updated as each action is completed successfully\r\n  // The data structure includes:\r\n  // - locationSent: Boolean indicating if the user's location has been sent to guardians\r\n  // - policeCalled: Boolean indicating if police has been notified\r\n  // - ngoCalled: Boolean indicating if NGO has been notified\r\n  // - evidenceSaved: Boolean indicating if evidence (voice, location) has been saved to blockchain\r\n  // This data will be used to update the UI to show which actions have been completed\r\n  // and to prevent duplicate actions from being taken\r\n  // const [emergencyActions, setEmergencyActions] = useState({\r\n  //   locationSent: false,\r\n  //   policeCalled: false,\r\n  //   ngoCalled: false,\r\n  //   evidenceSaved: false\r\n  // });\r\n\r\n  // TODO: Add useEffect to initiate emergency protocol\r\n  // useEffect(() => {\r\n  //   const initiateEmergency = async () => {\r\n  //     try {\r\n  //       setIsLoading(true);\r\n  //       const response = await emergencyService.initiateSOS();\r\n  //       // Handle response\r\n  //     } catch (err) {\r\n  //       setError('Failed to initiate emergency protocol');\r\n  //       console.error(err);\r\n  //     } finally {\r\n  //       setIsLoading(false);\r\n  //     }\r\n  //   };\r\n  //   \r\n  //   initiateEmergency();\r\n  // }, []);\r\n\r\n  // This would be replaced with actual timer logic\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setSosDuration(prev => prev + 1);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // TODO: Add function to send location to guardians\r\n  // This function will send the user's current location to their registered guardians\r\n  // It will update the emergencyActions state to mark locationSent as true when successful\r\n  // const sendLocationToGuardians = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     await emergencyService.sendLocationToGuardians();\r\n  //     setEmergencyActions(prev => ({ ...prev, locationSent: true }));\r\n  //     Alert.alert('Success', 'Location sent to guardians successfully');\r\n  //   } catch (err) {\r\n  //     setError('Failed to send location to guardians');\r\n  //     Alert.alert('Error', 'Failed to send location to guardians');\r\n  //     console.error(err);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  // TODO: Add function to call police and NGO\r\n  // This function will notify both police and NGO about the emergency situation\r\n  // It will update the emergencyActions state to mark policeCalled and ngoCalled as true when successful\r\n  // const callPoliceAndNGO = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     await emergencyService.callPoliceAndNGO();\r\n  //     setEmergencyActions(prev => ({ ...prev, policeCalled: true, ngoCalled: true }));\r\n  //     Alert.alert('Success', 'Police and NGO have been notified');\r\n  //   } catch (err) {\r\n  //     setError('Failed to notify police and NGO');\r\n  //     Alert.alert('Error', 'Failed to notify police and NGO');\r\n  //     console.error(err);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  // TODO: Add function to save evidence to blockchain\r\n  // This function will save voice recordings and location data to the blockchain for tamper-proof evidence\r\n  // It will update the emergencyActions state to mark evidenceSaved as true when successful\r\n  // const saveEvidenceToBlockchain = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     await emergencyService.saveEvidenceToBlockchain();\r\n  //     setEmergencyActions(prev => ({ ...prev, evidenceSaved: true }));\r\n  //     Alert.alert('Success', 'Evidence saved to blockchain successfully');\r\n  //   } catch (err) {\r\n  //     setError('Failed to save evidence to blockchain');\r\n  //     Alert.alert('Error', 'Failed to save evidence to blockchain');\r\n  //     console.error(err);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  // TODO: Add function to stop emergency alert\r\n  // This function will stop the emergency alert and notify all parties that the emergency is over\r\n  // It will update the isAlertActive state to false and navigate back to the previous screen\r\n  // const stopEmergencyAlert = async () => {\r\n  //   try {\r\n  //     setIsLoading(true);\r\n  //     await emergencyService.stopSOS();\r\n  //     setIsAlertActive(false);\r\n  //     Alert.alert('Success', 'Emergency alert stopped successfully');\r\n  //     navigation.goBack();\r\n  //   } catch (err) {\r\n  //     setError('Failed to stop emergency alert');\r\n  //     Alert.alert('Error', 'Failed to stop emergency alert');\r\n  //     console.error(err);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#FF3B30\" />\r\n        </TouchableOpacity>\r\n        <View style={styles.logoContainer}>\r\n          <SafeMitraLogo color=\"#FF3B30\" size={30} />\r\n          <Text style={styles.logoText}>SafeMitra</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <ScrollView contentContainerStyle={styles.scrollContent}>\r\n        {/* Main Content */}\r\n        <View style={styles.content}>\r\n          {/* Loading Indicator */}\r\n          {/* TODO: Add loading indicator when API calls are in progress */}\r\n          {/* {isLoading && <ActivityIndicator size=\"large\" color=\"#FF3B30\" style={styles.loadingIndicator} />} */}\r\n\r\n          {/* Error Message */}\r\n          {/* TODO: Add error message display */}\r\n          {/* {error && <Text style={styles.errorText}>{error}</Text> */}\r\n\r\n          {/* Title Section */}\r\n          <View style={styles.titleSection}>\r\n            <Text style={styles.title}>Emergency SOS Activated!</Text>\r\n            <Text style={styles.subtitle}>\r\n              Your emergency SOS has been activated. Help is on the way.\r\n            </Text>\r\n          </View>\r\n\r\n          {/* Timer Display */}\r\n          <View style={styles.timerContainer}>\r\n            <Ionicons name=\"time\" size={24} color=\"#FF3B30\" />\r\n            <Text style={styles.timerText}>SOS Active: {formatTime(sosDuration)}</Text>\r\n          </View>\r\n\r\n          {/* Map Placeholder */}\r\n          <View style={styles.mapContainer}>\r\n            <View style={styles.mapPlaceholder}>\r\n              <Ionicons name=\"map\" size={40} color=\"#CCCCCC\" />\r\n              <Text style={styles.mapPlaceholderText}>Live Location Map</Text>\r\n              <Text style={styles.mapPlaceholderSubtext}>\r\n                Map integration coming soon\r\n              </Text>\r\n            </View>\r\n          </View>\r\n\r\n          {/* Action Buttons */}\r\n          <View style={styles.actionButtons}>\r\n            <TouchableOpacity \r\n              style={styles.actionButton}\r\n              onPress={() => {/* TODO: Implement sendLocationToGuardians */}}\r\n            >\r\n              <Ionicons \r\n                name=\"location\" \r\n                size={24} \r\n                color=\"#FFFFFF\" \r\n              />\r\n              <Text style={styles.actionButtonText}>Send Live Location to Guardians</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity \r\n              style={[styles.actionButton, styles.emergencyButton]}\r\n              onPress={() => {/* TODO: Implement callPoliceAndNGO */}}\r\n            >\r\n              <Ionicons \r\n                name=\"call\" \r\n                size={24} \r\n                color=\"#FFFFFF\" \r\n              />\r\n              <Text style={styles.actionButtonText}>Call Police & NGO</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity \r\n              style={[styles.actionButton, styles.blockchainButton]}\r\n              onPress={() => {/* TODO: Implement saveEvidenceToBlockchain */}}\r\n            >\r\n              <Ionicons \r\n                name=\"lock-closed\" \r\n                size={24} \r\n                color=\"#FFFFFF\" \r\n              />\r\n              <Text style={styles.actionButtonText}>Save Voice & Location to Blockchain</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Guardian Alert Section */}\r\n          <View style={styles.guardianAlert}>\r\n            <View style={styles.alertHeader}>\r\n              <Ionicons name=\"notifications\" size={24} color=\"#FF3B30\" />\r\n              <Text style={styles.alertTitle}>Guardians have been notified</Text>\r\n            </View>\r\n            <View style={styles.alertStatus}>\r\n              <Ionicons \r\n                name=\"notifications\" \r\n                size={20} \r\n                color={isAlertActive ? '#4CAF50' : '#FF3B30'} \r\n              />\r\n              <Text style={styles.alertStatusText}>\r\n                {isAlertActive ? 'Alert Active' : 'Alert Stopped'}\r\n              </Text>\r\n            </View>\r\n            <TouchableOpacity \r\n              style={styles.stopAlertButton}\r\n              onPress={() => {/* TODO: Implement stopEmergencyAlert */}}>\r\n              <Text style={styles.stopAlertButtonText}>Stop Alert</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default EmergencySOSScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}